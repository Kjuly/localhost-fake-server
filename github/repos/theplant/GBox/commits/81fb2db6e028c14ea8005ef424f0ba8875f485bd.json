{
  "committer": {
    "avatar_url": "https://secure.gravatar.com/avatar/38eb4e6b823b7e406e11de34be7fe61d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png",
    "id": 877966,
    "url": "https://api.github.com/users/chenxiaoyi",
    "login": "chenxiaoyi"
  },
  "author": {
    "avatar_url": "https://secure.gravatar.com/avatar/38eb4e6b823b7e406e11de34be7fe61d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png",
    "id": 877966,
    "url": "https://api.github.com/users/chenxiaoyi",
    "login": "chenxiaoyi"
  },
  "files": [
    {
      "patch": "--- a/GBox/GBFileSystemWatcher.h\n+++ b/GBox/GBFileSystemWatcher.h\n@@ -68,6 +68,7 @@ static NSString * const kGBFileSystemWatcherLastFileNamesMap = @\"GBFileSystemWat\n @end\n \n @protocol GBFileSystemWatcherDelegate\n+- (void) dirCreated: (NSString*)thePath eventId: (uint64_t)eventId;\n - (void) fileCreated: (NSString*)thePath eventId: (uint64_t)eventId;\n - (void) fileModified: (NSString*)thePath eventId: (uint64_t)eventId;\n - (void) fileDeleted: (NSString*)thePath eventId: (uint64_t)eventId;",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/81fb2db6e028c14ea8005ef424f0ba8875f485bd/GBox/GBFileSystemWatcher.h",
      "deletions": 0,
      "additions": 1,
      "blob_url": "https://github.com/theplant/GBox/blob/81fb2db6e028c14ea8005ef424f0ba8875f485bd/GBox/GBFileSystemWatcher.h",
      "changes": 1,
      "filename": "GBox/GBFileSystemWatcher.h",
      "sha": "81fb2db6e028c14ea8005ef424f0ba8875f485bd"
    },
    {
      "patch": "--- a/GBox/GBFileSystemWatcher.m\n+++ b/GBox/GBFileSystemWatcher.m\n@@ -22,18 +22,20 @@\n //  \n static void fsevent_callback(ConstFSEventStreamRef streamRef,\n                        void *fswatcher,\n-                       size_t numEvents,\n+                       size_t numEvents, \n                        void *eventPaths,\n                        const FSEventStreamEventFlags eventFlags[],\n                        const FSEventStreamEventId eventIds[]) {\n     int i;\n     NSArray *filePaths;\n     NSDictionary *attrs;\n-    NSString *filePath, *newPath;\n+    NSString *filePath, *newPath, *dirPath, *fileName;\n     GBFileSystemWatcher *fsw;\n     FSEventStreamEventId eventId;\n     FSEventStreamEventFlags eventFlag;\n     NSFileManager *fm;\n+    NSDirectoryEnumerator *e;\n+    BOOL isDir;\n \n     fm = [NSFileManager defaultManager]; \n     filePaths = (NSArray*) eventPaths;\n@@ -53,7 +55,7 @@ static void fsevent_callback(ConstFSEventStreamRef streamRef,\n                 newPath = [[filePaths objectAtIndex: i+1] stringByStandardizingPath];\n                 i++;\n                 // there's a bug from kFSEventStreamEventFlagItemRenamed on Mac OS X 10.7. It's a \n-                // good API, but seems have no documentation, so take care.\n+                // good API, but seems have not been well documented yet, so take care.\n                 if ([fm fileExistsAtPath: newPath] == NO) {\n                     [[fsw delegate] fileDeleted: filePath eventId: eventId];\n                     [[fsw delegate] fileDeleted: newPath eventId: eventId];\n@@ -72,7 +74,28 @@ static void fsevent_callback(ConstFSEventStreamRef streamRef,\n                 continue;\n             // file created or modified\n             if (eventFlag & kFSEventStreamEventFlagItemCreated) {\n-                [[fsw delegate] fileCreated: filePath eventId: eventId];\n+                // file created or directory created\n+                [fm fileExistsAtPath: filePath isDirectory: &isDir];\n+                if (isDir) {\n+                    // if it's a new directory, tranverse all its content\n+                    // and filters the ignored files.\n+                    dirPath = filePath;\n+                    [[fsw delegate] dirCreated: dirPath eventId: eventId];\n+                    e = [fm enumeratorAtPath: dirPath];\n+                    while (fileName = [e nextObject]) {\n+                        filePath = [dirPath stringByAppendingPathComponent: fileName];\n+                        if ([fsw fileIgnored: filePath])\n+                            continue;\n+                        [fm fileExistsAtPath: filePath isDirectory: &isDir];\n+                        if (isDir) \n+                            [[fsw delegate] dirCreated: filePath eventId: eventId];\n+                        else \n+                            [[fsw delegate] fileCreated: filePath eventId: eventId];\n+                    }\n+                }\n+                else {\n+                    [[fsw delegate] fileCreated: filePath eventId: eventId];\n+                }\n             } else {\n                 [[fsw delegate] fileModified: filePath eventId: eventId];\n             }",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/81fb2db6e028c14ea8005ef424f0ba8875f485bd/GBox/GBFileSystemWatcher.m",
      "deletions": 4,
      "additions": 27,
      "blob_url": "https://github.com/theplant/GBox/blob/81fb2db6e028c14ea8005ef424f0ba8875f485bd/GBox/GBFileSystemWatcher.m",
      "changes": 31,
      "filename": "GBox/GBFileSystemWatcher.m",
      "sha": "81fb2db6e028c14ea8005ef424f0ba8875f485bd"
    },
    {
      "patch": "--- a/GBox/GBoxAppDelegate.m\n+++ b/GBox/GBoxAppDelegate.m\n@@ -271,7 +271,7 @@\n     if (fileSystemWatcher == nil) {\n         // start up GBFileSystemWatcher\n         watchedPaths = [NSArray arrayWithObject: [GBUtility rootPath]];\n-        ignoredFiles = [NSArray arrayWithObject: @\".DS_Store\"];\n+        ignoredFiles = [NSArray arrayWithObjects: @\".DS_Store\", @\"-Spotlight\", nil];\n         fileSystemWatcher = [[GBFileSystemWatcher alloc] initWithPaths: watchedPaths \n                                                           ignoredFiles: ignoredFiles\n                                                               delegate: self \n@@ -310,50 +310,23 @@\n \n // the callbacks for GBFileSystemWatcher\n - (void)fileCreated: (NSString*)filePath eventId: (uint64_t)eventId {\n-    BOOL isDir = NO;\n-    NSFileManager *fm = [NSFileManager defaultManager];\n     GBDataFacility *dataFacility = [GBDataFacility sharedDataFacility];\n-    NSString *dirPath, *fileName;\n-    NSDirectoryEnumerator *e;\n-    \n-    [fm fileExistsAtPath: filePath isDirectory: &isDir];\n-    if (isDir) {\n-        // if it is a directory, tranverse all its content and post into the task queue.\n-        NSLog(@\"dirCreated: %@\", filePath);\n-        [dataFacility insertEvent:[NSNumber numberWithUnsignedLongLong: eventId]\n-                    withEventCode:kGBLocalNewCollection\n-                         operandA:filePath\n-                      andOperandB:nil];\n-        dirPath = filePath;\n-        // tranverse all its content.\n-        e = [fm enumeratorAtPath: dirPath];\n-        while (fileName = [e nextObject]) {\n-            filePath = [dirPath stringByAppendingPathComponent: fileName];\n-            [fm fileExistsAtPath: filePath isDirectory: &isDir];\n-            if (isDir) {\n-                NSLog(@\"dirCreated: %@ with eventID: %llu\", filePath,eventId);\n-                [dataFacility insertEvent:[NSNumber numberWithUnsignedLongLong: eventId]\n-                            withEventCode:kGBLocalNewCollection\n-                                 operandA:filePath\n-                              andOperandB:nil];\n-            }\n-            else {\n-                NSLog(@\"fileCreated: %@ with eventID: %llu\", filePath,eventId);\n-                [dataFacility insertEvent:[NSNumber numberWithUnsignedLongLong: eventId]\n-                            withEventCode:kGBLocalNewFile\n-                                 operandA:filePath\n-                              andOperandB:nil];\n-            }\n-        }\n-    } \n-    else {\n-        // on the normal files deleted\n-        NSLog(@\"fileCreated: %@ with eventID: %llu\", filePath,eventId);\n-        [dataFacility insertEvent:[NSNumber numberWithUnsignedLongLong: eventId]\n-                    withEventCode:kGBLocalNewFile\n-                         operandA:filePath\n-                      andOperandB:nil];\n-    }\n+\n+    NSLog(@\"fileCreated: %@ with eventID: %llu\", filePath, eventId);\n+    [dataFacility insertEvent:[NSNumber numberWithUnsignedLongLong: eventId]\n+                withEventCode:kGBLocalNewFile\n+                     operandA:filePath\n+                  andOperandB:nil];\n+}\n+\n+- (void)dirCreated: (NSString*)dirPath eventId: (uint64_t)eventId {\n+    GBDataFacility *dataFacility = [GBDataFacility sharedDataFacility];\n+\n+    NSLog(@\"dirCreated: %@ with eventID: %llu\", dirPath, eventId);\n+    [dataFacility insertEvent:[NSNumber numberWithUnsignedLongLong: eventId]\n+                withEventCode:kGBLocalNewCollection\n+                     operandA:dirPath\n+                  andOperandB:nil];\n }\n \n - (void)fileDeleted: (NSString*)filePath eventId: (uint64_t)eventId {\n@@ -460,7 +433,7 @@\n \n     [fileSystemWatcher release];\n     watchedPaths = [NSArray arrayWithObject: [GBUtility rootPath]];\n-    ignoredFiles = [NSArray arrayWithObject: @\".DS_Store\"];\n+    ignoredFiles = [NSArray arrayWithObjects: @\".DS_Store\", @\"-Spotlight\", nil];\n     fileSystemWatcher = [[GBFileSystemWatcher alloc] initWithPaths: watchedPaths \n                                         ignoredFiles: ignoredFiles\n                                             delegate: self ",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/81fb2db6e028c14ea8005ef424f0ba8875f485bd/GBox/GBoxAppDelegate.m",
      "deletions": 45,
      "additions": 18,
      "blob_url": "https://github.com/theplant/GBox/blob/81fb2db6e028c14ea8005ef424f0ba8875f485bd/GBox/GBoxAppDelegate.m",
      "changes": 63,
      "filename": "GBox/GBoxAppDelegate.m",
      "sha": "81fb2db6e028c14ea8005ef424f0ba8875f485bd"
    }
  ],
  "stats": {
    "deletions": 0,
    "additions": 0,
    "total": 0
  },
  "parents": [
    {
      "sha": "49ee3bbfb74ce63ffe4039d163e6536977b71cca",
      "url": "https://api.github.com/repos/theplant/GBox/commits/49ee3bbfb74ce63ffe4039d163e6536977b71cca"
    },
    {
      "sha": "93ba675b9149736ec883e4a9f1f55e1e59398a1d",
      "url": "https://api.github.com/repos/theplant/GBox/commits/93ba675b9149736ec883e4a9f1f55e1e59398a1d"
    }
  ],
  "sha": "81fb2db6e028c14ea8005ef424f0ba8875f485bd",
  "commit": {
    "tree": {
      "sha": "c4b2c552df8eaa9534fe96b99d850e577313d4a7",
      "url": "https://api.github.com/repos/theplant/GBox/git/trees/c4b2c552df8eaa9534fe96b99d850e577313d4a7"
    },
    "message": "Merge branch 'master' of github.com:theplant/GBox",
    "committer": {
      "date": "2011-08-31T03:17:07-07:00",
      "name": "Xiaoyi Chen",
      "email": "xiaoyi.chen@hotmail.com"
    },
    "author": {
      "date": "2011-08-31T03:17:07-07:00",
      "name": "Xiaoyi Chen",
      "email": "xiaoyi.chen@hotmail.com"
    },
    "url": "https://api.github.com/repos/theplant/GBox/git/commits/81fb2db6e028c14ea8005ef424f0ba8875f485bd"
  },
  "url": "https://api.github.com/repos/theplant/GBox/commits/81fb2db6e028c14ea8005ef424f0ba8875f485bd"
}
