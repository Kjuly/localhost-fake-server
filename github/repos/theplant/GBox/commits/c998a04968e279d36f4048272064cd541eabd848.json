{
  "committer": {
    "login": "chenxiaoyi",
    "avatar_url": "https://secure.gravatar.com/avatar/38eb4e6b823b7e406e11de34be7fe61d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png",
    "id": 877966,
    "url": "https://api.github.com/users/chenxiaoyi"
  },
  "author": {
    "login": "chenxiaoyi",
    "avatar_url": "https://secure.gravatar.com/avatar/38eb4e6b823b7e406e11de34be7fe61d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png",
    "id": 877966,
    "url": "https://api.github.com/users/chenxiaoyi"
  },
  "files": [
    {
      "patch": "--- a/GBox/GBSyncController.h\n+++ b/GBox/GBSyncController.h\n@@ -36,6 +36,7 @@\n \n     BOOL setupFinished;\n     BOOL firstDocListFetchSucceed;\n+    BOOL folderCreationSucceed;\n     \n     NSMutableArray *waitingTasksCache;\n     NSMutableArray *executingTasksCache;",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/c998a04968e279d36f4048272064cd541eabd848/GBox/GBSyncController.h",
      "deletions": 0,
      "additions": 1,
      "blob_url": "https://github.com/theplant/GBox/blob/c998a04968e279d36f4048272064cd541eabd848/GBox/GBSyncController.h",
      "changes": 1,
      "filename": "GBox/GBSyncController.h",
      "sha": "c998a04968e279d36f4048272064cd541eabd848"
    },
    {
      "patch": "--- a/GBox/GBSyncController.m\n+++ b/GBox/GBSyncController.m\n@@ -105,7 +105,7 @@ static GBSyncController * shareSyncController = nil;\n         if([entry class]!= [GDataEntryFolderDoc class]){\n         \n         [dataFacility insertEvent:0\n-                    withEventCode:kGBServerFileUpdated\n+                    withEventCode:kGBServerNewFile\n                          operandA:[entry identifier]\n                       andOperandB:nil];\n         }      \n@@ -189,20 +189,17 @@ static GBSyncController * shareSyncController = nil;\n     \n     if (setupFinished) {\n         if(firstDocListFetchSucceed){\n-            [collectionManager setFolderHrefDic];\n             [taskHandler handleTasks];\n         }else{\n             firstDocListFetchSucceed = YES;\n             [self beginSync];\n         }\n     }else{\n-        [collectionManager setFolderHrefDic];\n         [self initialServerCollectionsCheck];\n         [self initialServerEntryCheck];\n-        [dataFacility contextSave];\n         [self beginSync];\n         setupFinished = YES ;\n-\n+        [dataFacility contextSave];\n     }\n }\n \n@@ -332,9 +329,11 @@ static GBSyncController * shareSyncController = nil;\n }\n \n -(void)cancelSync{\n-    \n+    setupFinished = NO;\n     [taskHandler cancelAllOperations];\n-    \n+    [statusItem setImage:[NSImage imageNamed:@\"statusicon\"]];\n+    firstDocListFetchSucceed = NO;\n+    folderCreationSucceed = NO;\n     for(NSTimer* timer in repeatingTimers){\n         [timer invalidate];\n         timer=nil;",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/c998a04968e279d36f4048272064cd541eabd848/GBox/GBSyncController.m",
      "deletions": 7,
      "additions": 6,
      "blob_url": "https://github.com/theplant/GBox/blob/c998a04968e279d36f4048272064cd541eabd848/GBox/GBSyncController.m",
      "changes": 13,
      "filename": "GBox/GBSyncController.m",
      "sha": "c998a04968e279d36f4048272064cd541eabd848"
    },
    {
      "patch": "--- a/GBox/GBTaskHandler.h\n+++ b/GBox/GBTaskHandler.h\n@@ -43,6 +43,7 @@ struct PIArray {\n     NSMutableArray* currentExecutingTasks;\n     NSMutableSet* uploadingPaths; \n     BOOL canceled;\n+    NSMutableDictionary* additionalIdentifierDic;\n }\n \n -(void)handleTasks;\n@@ -50,6 +51,7 @@ struct PIArray {\n -(void)restartAllOperations ;\n -(void) appendPIList:(id)operation;\n -(void) removePIList:(NSInteger)operationID;\n+-(void) appendPISingle:(NSString *)operation;\n -(void)cancelAllOperations;\n -(void)setCollectionManager:(GBCollectionManager*)cm;\n ",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/c998a04968e279d36f4048272064cd541eabd848/GBox/GBTaskHandler.h",
      "deletions": 0,
      "additions": 2,
      "blob_url": "https://github.com/theplant/GBox/blob/c998a04968e279d36f4048272064cd541eabd848/GBox/GBTaskHandler.h",
      "changes": 2,
      "filename": "GBox/GBTaskHandler.h",
      "sha": "c998a04968e279d36f4048272064cd541eabd848"
    },
    {
      "patch": "--- a/GBox/GBTaskHandler.m\n+++ b/GBox/GBTaskHandler.m\n@@ -48,6 +48,7 @@\n         piList = 0;\n         \n         uploadingPaths = [[NSMutableSet alloc]init];\n+        additionalIdentifierDic = [[NSMutableDictionary alloc]init];\n         \n          NSNotificationCenter *nc = [NSNotificationCenter defaultCenter];\n          [nc addObserver:self\n@@ -209,11 +210,14 @@\n     NSString* entryTitle = [[entry title] stringValue];\n \n     NSLog(@\"Collection %@ added on server.\",entryTitle);\n-    \n+    [self appendPISingle:[NSString stringWithFormat:@\"New folder:%@\",entryTitle] ];\n+\n     NSArray* includingCollections = [collectionManager includingCollectionOfIdentifier:identifier];\n-    if(includingCollections!=nil&&[includingCollections count]==0){\n-        [GBUtility createLocalFolderAtPath: [GBUtility expandedPath:entryTitle]];\n-        [GBUtility setIdentifier:identifier forFileAtPath:entryTitle];\n+    if(includingCollections==nil||[includingCollections count]==0){\n+        NSString* localExpandedpath = [GBUtility expandedPath:entryTitle];\n+        [GBUtility createLocalFolderAtPath: localExpandedpath];\n+        [GBUtility setIdentifier:identifier forFileAtPath:localExpandedpath];\n+        [additionalIdentifierDic setValue:[NSSet setWithObject: localExpandedpath ] forKey:identifier];\n     }else{\n         for(GDataEntryFolderDoc* folder in includingCollections){\n             NSString* folderIdentifier = [folder identifier];\n@@ -224,13 +228,17 @@\n                 \n                 return;\n             }\n+            NSMutableSet *newPathSet = [[NSMutableSet alloc]init ];\n             for(NSString* parentPath in parentPathSet){\n                 //The local directory is not exist\n                 NSString* newPath = [NSString stringWithFormat:@\"%@/%@/\",parentPath,entryTitle];\n                 if([localInfoDic valueForKey:newPath]==nil){\n                     [GBUtility createLocalFolderAtPath: newPath];\n                     [GBUtility setIdentifier:identifier forFileAtPath:newPath];\n+                    [newPathSet addObject:newPath];\n                 }\n+                [additionalIdentifierDic setValue:newPathSet forKey:identifier];\n+\n                 //If the local directory is exist, then nothing have to be done.\n             }\n         }\n@@ -241,17 +249,29 @@\n     //Server New Collection.\n }\n \n+\n+\n -(BOOL) handleTask:(NSManagedObject*) taskMO {    \n     NSManagedObjectID *taskID = [taskMO objectID];\n     [dataFacility setState:kGBStateExecuting ofTaskID:taskID];\n     NSInteger eventCode = [[taskMO valueForKey:@\"eventCode\"] intValue];\n     NSString *operandA = [taskMO valueForKey:@\"operandA\"];\n+    \n     switch(eventCode){\n \n         case kGBServerFileUpdated:{\n             [self handleServerFileUpdated:taskMO];\n         }\n             break;\n+        case kGBServerNewFile:{\n+            //Server New File\n+            [NSTimer scheduledTimerWithTimeInterval:i\n+                                             target:self\n+                                           selector:@selector(downloadTimerFireMethod:)\n+                                           userInfo:taskMO\n+                                            repeats:NO];\n+            i=i+2;\n+        }break;\n         \n         case kGBLocalNewFile: {\n             NSString *path = operandA;\n@@ -297,6 +317,7 @@\n             NSString* path = operandA;\n             \n             NSString* identifier = [GBUtility identifierforFileAtPath:path];\n+            [self appendPISingle:[NSString stringWithFormat:@\"File updated:%@\",[path lastPathComponent]] ];\n \n             if(identifier!=nil&&[identifier length]>80){\n                 NSError* error = nil;\n@@ -315,6 +336,7 @@\n                  The receiver is later in time than anotherDate, NSOrderedDescending    RECEIVER > ANOTHERDATE\n                  The receiver is earlier in time than anotherDate, NSOrderedAscending.  RECEIVER < ANOTHERDATE\n                  */\n+                \n                 NSComparisonResult cResult = [createDate compare:modifiedDate];\n                 if(cResult == NSOrderedAscending){\n                     \n@@ -384,6 +406,8 @@\n             \n             NSString* path = operandA;\n             NSString* fileName = [path lastPathComponent];   \n+            [self appendPISingle:[NSString stringWithFormat:@\"File deleted:%@\",fileName] ];\n+\n             NSString* identifierToDelete=nil;\n             if(identifier!=nil){\n                 identifierToDelete = identifier;\n@@ -456,31 +480,36 @@\n         case kGBLocalNewCollection:{\n             //kGBLocalNewCollection\n             NSString* path = operandA;\n-            if([[NSFileManager defaultManager] fileExistsAtPath:path]){\n-                \n-                for(NSString* uploadingPath in uploadingPaths){\n-                    if([uploadingPath isEqualToString:path]){\n-                        [currentExecutingTasks removeObject:taskID];\n-                        [dataFacility setState:kGBStateCancel ofTaskID:[taskMO objectID]];\n-                        return YES;\n-                    }\n-                }\n-                NSString* possibleIdentifier = [GBUtility identifierforFileAtPath:path];\n-                if(possibleIdentifier==nil||[possibleIdentifier length]<80){\n+            [self appendPISingle:[NSString stringWithFormat:@\"New folder:%@\",[path lastPathComponent]] ];\n+\n+            if([path isEqualToString:[GBUtility rootPath]]){\n+                if([[NSFileManager defaultManager] fileExistsAtPath:path]){\n                     \n-                    [uploadingPaths addObject:path];\n-                    [collectionManager createFolder:path];\n+                    for(NSString* uploadingPath in uploadingPaths){\n+                        if([uploadingPath isEqualToString:path]){\n+                            [currentExecutingTasks removeObject:taskID];\n+                            [dataFacility setState:kGBStateCancel ofTaskID:[taskMO objectID]];\n+                            return YES;\n+                        }\n+                    }\n+                    NSString* possibleIdentifier = [GBUtility identifierforFileAtPath:path];\n+                    if(possibleIdentifier==nil||[possibleIdentifier length]<80){\n+                        \n+                        [uploadingPaths addObject:path];\n+                        [collectionManager createFolder:path];\n+                    }else{\n+                        [dataFacility insertEvent:0\n+                                    withEventCode:kGBLocalAddEntryToCollection\n+                                         operandA:path\n+                                      andOperandB:nil];\n+                    }\n+                    [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n+                    [currentExecutingTasks removeObject:taskID];\n                 }else{\n-                    [dataFacility insertEvent:0\n-                                withEventCode:kGBLocalAddEntryToCollection\n-                                     operandA:path\n-                                  andOperandB:nil];\n+                    [dataFacility setState:kGBStateCancel ofTaskID:[taskMO objectID]];\n+                    [currentExecutingTasks removeObject:taskID];\n                 }\n-                [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n-                [currentExecutingTasks removeObject:taskID];\n-            }else{\n-                [dataFacility setState:kGBStateCancel ofTaskID:[taskMO objectID]];\n-                [currentExecutingTasks removeObject:taskID];\n+                \n             }\n         }\n             break;\n@@ -661,6 +690,7 @@\n                          operandA:path\n                       andOperandB:nil];\n     }\n+    \n }\n \n -(void)uploadFinished:(NSNotification*)aNotification{\n@@ -688,7 +718,6 @@\n             \n         }\n         [GBUtility setIdentifier:identifier forFileAtPath:path];\n-        \n     }else if(eventCode == kGBLocalFileUpdated){\n         /*\n         NSManagedObject* pathMO = [dataFacility fetchLocalPathEntryByPathString: path];\n@@ -767,29 +796,50 @@\n     NSString* pathAtRoot =[GBUtility expandedPath:[[entry title]stringValue]];\n     \n     [GBUtility setIdentifier:identifier forFileAtPath:pathAtRoot];\n-    \n     NSArray* includingCollections = [collectionManager includingCollectionOfIdentifier:identifier];\n     if(includingCollections!=nil&&[includingCollections count]!=0){\n+        BOOL isRemoveRootFile = NO;\n         for(GDataEntryFolderDoc* folder in includingCollections){\n             NSString* folderIdentifier = [folder identifier];\n             NSMutableSet* parentPathSet = [localIdentifierDic valueForKey:folderIdentifier];\n             if(parentPathSet==nil||[parentPathSet count] == 0){\n-                [dataFacility insertEvent:0\n-                            withEventCode:kGBServerNewCollection\n-                                 operandA:folderIdentifier\n-                              andOperandB:nil];\n-            }\n+                NSSet* additionalPathSet = [additionalIdentifierDic valueForKey:folderIdentifier];\n+                if(additionalIdentifierDic==nil||[additionalIdentifierDic count]==0){\n+                    [dataFacility insertEvent:0\n+                                withEventCode:kGBServerNewCollection\n+                                     operandA:folderIdentifier\n+                                  andOperandB:nil];\n+                    [dataFacility insertEvent:0\n+                                withEventCode:kGBServerAddEntryToCollection\n+                                     operandA:identifier\n+                                  andOperandB:folderIdentifier];\n+                }else{\n+                    for(NSString* parentPath in additionalPathSet){\n+                        //The local directory is not exist\n+                        NSString* newPath = [NSString stringWithFormat:@\"%@/%@\",parentPath,[[entry title]stringValue]];\n+                        [GBUtility createLocalFolderAtPath:parentPath];\n+                        [GBUtility cpFileAt:pathAtRoot\n+                                         to:newPath];                    \n+                        //If the local directory is exist, then nothing have to be done.\n+                    }\n+                    isRemoveRootFile = YES;\n+                }\n+            }else{\n                 \n-            for(NSString* parentPath in parentPathSet){\n+                for(NSString* parentPath in parentPathSet){\n                     //The local directory is not exist\n-                NSString* newPath = [NSString stringWithFormat:@\"%@/%@\",parentPath,[[entry title]stringValue]];\n+                    NSString* newPath = [NSString stringWithFormat:@\"%@/%@\",parentPath,[[entry title]stringValue]];\n                     [GBUtility createLocalFolderAtPath:parentPath];\n                     [GBUtility cpFileAt:pathAtRoot\n                                      to:newPath];                    \n                     //If the local directory is exist, then nothing have to be done.\n+                }\n+                isRemoveRootFile = YES;\n             }\n         }\n-        [GBUtility removeFileAt:pathAtRoot];\n+        if(isRemoveRootFile){\n+            [GBUtility removeFileAt:pathAtRoot];\n+        }\n     }\n     [currentExecutingTasks removeObject:taskID];\n     [dataFacility setState:kGBStateDone ofTaskID:taskID];\n@@ -797,15 +847,17 @@\n     [GBUtility displayAlert:@\"File downloaded:\"\n                      format:@\"%@\", [[entry title] stringValue]];\n }\n-\n--(void)handleTasks{\n-    \n+-(void)refresh{\n     fileSystemInfo = [GBFileSystemInfo sharedFileSystemInfo];\n     [fileSystemInfo setLocalInfoDic];//Refresh local filesystem info.\n     localInfoDic = [fileSystemInfo localInfoDic];\n     //localMD5Dic = [fileSystemInfo md5PathsDic];\n     localIdentifierDic = [fileSystemInfo identifierPathsDic];\n+    [collectionManager setFolderHrefDic];\n+}\n+-(void)handleTasks{\n     \n+    [self refresh];\n     //NSUInteger currentExecuting = [dataFacility countOfExecutingTasks];\n     i=0;\n     NSArray* waitingTasks = [dataFacility fetchTaskOfState:kGBStateWaiting];\n@@ -963,4 +1015,25 @@\n     [[GBUtility sharedPList] removeUsed:operationID];\n     piList--;\n }\n+\n+//append for single task not include(upload,download)\n+//operation is the string\n+-(void) appendPISingle:(NSString *)operation {\n+    \n+    if (piList < 6) {\n+        //search one is not in used\n+        NSInteger ID = [[GBUtility sharedPList] getNotUsedID];\n+        if ( ID != -1)\n+        {\n+            [[GBUtility sharedPList] usePI:ID fileName:operation];\n+            piList++;\n+            NSLog(@\"pList add %@ after ++: %ld\",operation,piList);\n+            \n+        }\n+        [[GBUtility sharedPList] removeUsed:ID];\n+        piList--;\n+        NSLog(@\"pList after -- : %ld\",piList);\n+\n+    }\n+}\n @end",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/c998a04968e279d36f4048272064cd541eabd848/GBox/GBTaskHandler.m",
      "deletions": 39,
      "additions": 112,
      "blob_url": "https://github.com/theplant/GBox/blob/c998a04968e279d36f4048272064cd541eabd848/GBox/GBTaskHandler.m",
      "changes": 151,
      "filename": "GBox/GBTaskHandler.m",
      "sha": "c998a04968e279d36f4048272064cd541eabd848"
    },
    {
      "patch": "--- a/GBox/GBUtility.m\n+++ b/GBox/GBUtility.m\n@@ -456,7 +456,10 @@ static NSUInteger sharedBandWidth = 0;\n \n - (void) removeUsed:(NSInteger)piID\n {\n+    NSLog(@\"piID = %ld\",piID);\n+    NSLog(@\"queuelist = %ld\",[queueList count]);\n     [queueList addObject:[[NSString alloc] initWithFormat:@\"ld\",piID]];\n+    NSLog(@\"queuelist = %ld\",[queueList count]);\n     /*\n     for (id pi in pList){\n         if ([pi getID] == piID) {",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/c998a04968e279d36f4048272064cd541eabd848/GBox/GBUtility.m",
      "deletions": 0,
      "additions": 3,
      "blob_url": "https://github.com/theplant/GBox/blob/c998a04968e279d36f4048272064cd541eabd848/GBox/GBUtility.m",
      "changes": 3,
      "filename": "GBox/GBUtility.m",
      "sha": "c998a04968e279d36f4048272064cd541eabd848"
    },
    {
      "patch": "--- a/GBox/GBoxAppDelegate.m\n+++ b/GBox/GBoxAppDelegate.m\n@@ -206,7 +206,6 @@\n     \n     if([authController isSignedIn]==YES){\n         \n-        \n         docListData = [GBDocListData sharedDocListData];\n         [docListData setAuth:[authController auth]];\n         [docListData fetchDocList];\n@@ -429,29 +428,28 @@\n \n     if ([fm fileExistsAtPath:rootPath]) {\n        newPath = [[rootPath stringByDeletingLastPathComponent] stringByAppendingPathComponent: @\"GBox_old\"];\n-       //[fm moveItemAtPath:rootPath toPath:newPath error:nil]; \n         NSError* error = nil;\n-        if(![fm fileExistsAtPath:newPath]){\n+        if([fm fileExistsAtPath:newPath]){\n+            [GBUtility recycleFileAtPath:newPath];\n+        }else{\n             [fm createDirectoryAtPath:newPath\n           withIntermediateDirectories:NO\n                            attributes:nil\n                                 error:&error];\n         }\n-        NSArray* dirContents = [fm contentsOfDirectoryAtPath:rootPath error:&error];\n-       [ [NSWorkspace sharedWorkspace] performFileOperation:NSWorkspaceMoveOperation\n-                                                     source:rootPath \n-                                                destination:newPath \n-                                                      files:dirContents\n-                                                        tag:0]  ;  \n+        \n+        [fm moveItemAtPath:rootPath\n+                    toPath:newPath\n+                     error:& error];\n+        \n+        \n         if(error!=nil){\n             NSLog(@\"error in backup: %@\",error);\n         }\n-        NSLog(@\"backup the old gbox folder to %@\", newPath);\n         \n-    }else{\n-        [fm createDirectoryAtPath:rootPath withIntermediateDirectories:YES attributes:nil error:nil]; \n-    }    \n-    \n+    }\n+    [fm createDirectoryAtPath:rootPath withIntermediateDirectories:YES attributes:nil error:nil]; \n+\n \n     [fileSystemWatcher release];\n     watchedPaths = [NSArray arrayWithObject: [GBUtility rootPath]];\n@@ -460,14 +458,16 @@\n                                         ignoredFiles: ignoredFiles\n                                             delegate: self \n                                          lastEventId: kFSEventStreamEventIdSinceNow];\n+    \n     [fileSystemWatcher start];\n         \n     setupFinished = NO;\n     [userDefaults setValue:nil forKey:kGBLargestChangestamp];\n-    \n+    [[NSUserDefaults standardUserDefaults]setObject:[NSNumber numberWithUnsignedLongLong:kFSEventStreamEventIdSinceNow]             forKey:kGBFileSystemWatcherLastEventIDKey];\n     [userDefaults setBool: YES forKey:kGBSetupFinished];\n     [userDefaults synchronize];\n-    \n+\n+        \n     [GBUtility displayAlert:@\"Welcome\" format:@\"Please login with your google account in preferences...\"];\n     \n } ",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/c998a04968e279d36f4048272064cd541eabd848/GBox/GBoxAppDelegate.m",
      "deletions": 16,
      "additions": 16,
      "blob_url": "https://github.com/theplant/GBox/blob/c998a04968e279d36f4048272064cd541eabd848/GBox/GBoxAppDelegate.m",
      "changes": 32,
      "filename": "GBox/GBoxAppDelegate.m",
      "sha": "c998a04968e279d36f4048272064cd541eabd848"
    },
    {
      "patch": "--- a/GBox/GBoxConstants.m\n+++ b/GBox/GBoxConstants.m\n@@ -40,14 +40,13 @@ NSString* const kGBDownloadFailed=@\"kGBDownloadFailed\";\n NSString* const kGBUploadFinished=@\"kGBUploadFinished\";\n NSString* const kGBUploadFailed=@\"kGBUploadFailed\";\n \n-\n NSString* const kGBACLEntryAdded=@\"kGBACLEntryAdded\";\n \n NSString* const kGBLargestChangestamp=@\"largestChangestamp\";\n \n NSString* const kGBNotFoundMarker = @\"notFoundMarker#9987dfewfvrtqd8765dfeef78341\";\n \n-NSString* const kGBSetupFinished = @\"kGBSetupFinishedTEST\";\n+NSString* const kGBSetupFinished = @\"kGBSetupFinished-Alpha1TESTTEST984959867787896658786354\";\n \n NSString * const kGB_DB_STORE_FILENAME = @\"gbdatamodel.xml\";\n ",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/c998a04968e279d36f4048272064cd541eabd848/GBox/GBoxConstants.m",
      "deletions": 2,
      "additions": 1,
      "blob_url": "https://github.com/theplant/GBox/blob/c998a04968e279d36f4048272064cd541eabd848/GBox/GBoxConstants.m",
      "changes": 3,
      "filename": "GBox/GBoxConstants.m",
      "sha": "c998a04968e279d36f4048272064cd541eabd848"
    }
  ],
  "stats": {
    "deletions": 64,
    "additions": 141,
    "total": 205
  },
  "parents": [
    {
      "sha": "5f15f32d6928a12d248a91380564611c21eefc53",
      "url": "https://api.github.com/repos/theplant/GBox/commits/5f15f32d6928a12d248a91380564611c21eefc53"
    }
  ],
  "sha": "c998a04968e279d36f4048272064cd541eabd848",
  "commit": {
    "tree": {
      "sha": "3c2bd2cb910949bb9d878cff121d2bfb9ec146ad",
      "url": "https://api.github.com/repos/theplant/GBox/git/trees/3c2bd2cb910949bb9d878cff121d2bfb9ec146ad"
    },
    "message": "Initial launch is ok",
    "committer": {
      "date": "2011-09-07T03:48:32-07:00",
      "name": "Xiaoyi Chen",
      "email": "xiaoyi.chen@hotmail.com"
    },
    "author": {
      "date": "2011-09-07T03:48:32-07:00",
      "name": "Xiaoyi Chen",
      "email": "xiaoyi.chen@hotmail.com"
    },
    "url": "https://api.github.com/repos/theplant/GBox/git/commits/c998a04968e279d36f4048272064cd541eabd848"
  },
  "url": "https://api.github.com/repos/theplant/GBox/commits/c998a04968e279d36f4048272064cd541eabd848"
}
