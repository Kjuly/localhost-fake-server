{
  "author": {
    "login": "chenxiaoyi",
    "avatar_url": "https://secure.gravatar.com/avatar/38eb4e6b823b7e406e11de34be7fe61d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png",
    "id": 877966,
    "url": "https://api.github.com/users/chenxiaoyi"
  },
  "files": [
    {
      "patch": "--- a/GBox/GBSyncController.m\n+++ b/GBox/GBSyncController.m\n@@ -267,7 +267,6 @@ static GBSyncController * shareSyncController = nil;\n                     \n                     if ([entry isRemoved]) {\n                         // Removed\n-                        //[GBUtility displayAlert:@\"Remove\" format:@\"\\nRemoved (%@)\", [entry identifier] ];\n                         //NSLog(@\"Removed %@ with timestamp %@\",[entry identifier] ,[entry changestamp]);\n                     } else {\n                         // Added or updated",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/c1c99088585e1fb5c45ea583a766d365914e0069/GBox/GBSyncController.m",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "filename": "GBox/GBSyncController.m",
      "blob_url": "https://github.com/theplant/GBox/blob/c1c99088585e1fb5c45ea583a766d365914e0069/GBox/GBSyncController.m",
      "sha": "c1c99088585e1fb5c45ea583a766d365914e0069"
    },
    {
      "patch": "--- a/GBox/GBTaskHandler.m\n+++ b/GBox/GBTaskHandler.m\n@@ -272,7 +272,7 @@\n                                                    selector:@selector(uploadTimerFireMethod:)\n                                                    userInfo:taskMO\n                                                     repeats:NO];\n-                    i=i+2;\n+                    i=i+2;  \n                 }else{\n                     //If the local file is already set an identifier, the file is treated as updated.\n                     [currentExecutingTasks removeObject:taskID];\n@@ -294,26 +294,40 @@\n         }    \n \n         case kGBLocalFileUpdated: {\n-            [NSTimer scheduledTimerWithTimeInterval:i\n-                                             target:self\n-                                           selector:@selector(uploadTimerFireMethod:)\n-                                           userInfo:taskMO\n-                                            repeats:NO];\n-            i=i+2;\n             NSString* path = operandA;\n             \n             NSString* identifier = [GBUtility identifierforFileAtPath:path];\n-            \n-            NSSet* paths = [localIdentifierDic valueForKey:identifier];\n-            \n-            for(NSString* destPath in paths){\n-                if(![destPath isEqualToString: path]){\n-                    [GBUtility recycleFileAtPath:destPath];\n-                    [GBUtility cpFileAt:path to:destPath];\n-                }\n-            } \n-            [currentExecutingTasks removeObject:taskID];\n-            [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n+\n+            if(identifier!=nil&&[identifier length]>80){\n+                \n+                \n+                [NSTimer scheduledTimerWithTimeInterval:i\n+                                                 target:self\n+                                               selector:@selector(uploadTimerFireMethod:)\n+                                               userInfo:taskMO\n+                                                repeats:NO];\n+                i=i+2;\n+                \n+                NSSet* paths = [localIdentifierDic valueForKey:identifier];\n+                \n+                for(NSString* destPath in paths){\n+                    if(![destPath isEqualToString: path]){\n+                        [GBUtility recycleFileAtPath:destPath];\n+                        [GBUtility cpFileAt:path to:destPath];\n+                    }\n+                } \n+                \n+                [currentExecutingTasks removeObject:taskID];\n+                [dataFacility setState:kGBStateDone ofTaskID:taskID];\n+                \n+            }else{\n+                [currentExecutingTasks removeObject:taskID];\n+                [dataFacility setState:kGBStateCancel ofTaskID:taskID];\n+                [dataFacility insertEvent:0\n+                            withEventCode:kGBLocalNewFile\n+                                 operandA:path\n+                              andOperandB:nil];\n+            }\n          break;\n         }\n             \n@@ -432,6 +446,11 @@\n                     \n                     [uploadingPaths addObject:path];\n                     [collectionManager createFolder:path];\n+                }else{\n+                    [dataFacility insertEvent:0\n+                                withEventCode:kGBLocalAddEntryToCollection\n+                                     operandA:path\n+                                  andOperandB:nil];\n                 }\n                 [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n                 [currentExecutingTasks removeObject:taskID];\n@@ -782,13 +801,16 @@\n         NSInteger eventCode = [[mo valueForKey:@\"eventCode\"]integerValue];\n         NSString *path = [mo valueForKey:@\"operandA\"];\n         NSString* option = nil;\n+        \n         if(eventCode==kGBLocalNewFile){\n             \n             NSLog(@\"Uploading %@ \", path);\n             \n         }else if(eventCode==kGBLocalFileUpdated){\n+            \n             option = @\"NewRevision\";\n             NSLog(@\"Updating %@ \", path);\n+            \n         }\n         \n         GBUploadOperation* uploadOp = [[GBUploadOperation alloc] initWith:docListData",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/c1c99088585e1fb5c45ea583a766d365914e0069/GBox/GBTaskHandler.m",
      "additions": 40,
      "deletions": 18,
      "changes": 58,
      "filename": "GBox/GBTaskHandler.m",
      "blob_url": "https://github.com/theplant/GBox/blob/c1c99088585e1fb5c45ea583a766d365914e0069/GBox/GBTaskHandler.m",
      "sha": "c1c99088585e1fb5c45ea583a766d365914e0069"
    }
  ],
  "committer": {
    "login": "chenxiaoyi",
    "avatar_url": "https://secure.gravatar.com/avatar/38eb4e6b823b7e406e11de34be7fe61d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png",
    "id": 877966,
    "url": "https://api.github.com/users/chenxiaoyi"
  },
  "stats": {
    "additions": 40,
    "deletions": 19,
    "total": 59
  },
  "parents": [
    {
      "sha": "9a4cc31c2556deb7029496438725222112cc7680",
      "url": "https://api.github.com/repos/theplant/GBox/commits/9a4cc31c2556deb7029496438725222112cc7680"
    }
  ],
  "commit": {
    "tree": {
      "sha": "e3a8f0ecac2fe7af5962c6e69ec4bda4dd9139c9",
      "url": "https://api.github.com/repos/theplant/GBox/git/trees/e3a8f0ecac2fe7af5962c6e69ec4bda4dd9139c9"
    },
    "message": "Move file into GBox folder get uploaded, copy folder inside GBox folder get fixed.",
    "author": {
      "date": "2011-09-06T19:47:29-07:00",
      "name": "Xiaoyi Chen",
      "email": "xiaoyi.chen@hotmail.com"
    },
    "committer": {
      "date": "2011-09-06T19:47:29-07:00",
      "name": "Xiaoyi Chen",
      "email": "xiaoyi.chen@hotmail.com"
    },
    "url": "https://api.github.com/repos/theplant/GBox/git/commits/c1c99088585e1fb5c45ea583a766d365914e0069"
  },
  "sha": "c1c99088585e1fb5c45ea583a766d365914e0069",
  "url": "https://api.github.com/repos/theplant/GBox/commits/c1c99088585e1fb5c45ea583a766d365914e0069"
}
