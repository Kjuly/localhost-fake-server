{
  "parents": [
    {
      "sha": "f39eb9cba9aa7fcc4c07b5842fe71205c561980f",
      "url": "https://api.github.com/repos/theplant/GBox/commits/f39eb9cba9aa7fcc4c07b5842fe71205c561980f"
    }
  ],
  "sha": "34a6a1a5bea5b3da557a2fc13829b4f6e57b28f8",
  "commit": {
    "message": "Add local collection operation synced.",
    "tree": {
      "sha": "c35e758e58cd0721667c0428e7be821b4163bdf5",
      "url": "https://api.github.com/repos/theplant/GBox/git/trees/c35e758e58cd0721667c0428e7be821b4163bdf5"
    },
    "author": {
      "email": "xiaoyi.chen@hotmail.com",
      "date": "2011-08-31T00:27:57-07:00",
      "name": "Xiaoyi Chen"
    },
    "committer": {
      "email": "xiaoyi.chen@hotmail.com",
      "date": "2011-08-31T00:27:57-07:00",
      "name": "Xiaoyi Chen"
    },
    "url": "https://api.github.com/repos/theplant/GBox/git/commits/34a6a1a5bea5b3da557a2fc13829b4f6e57b28f8"
  },
  "author": {
    "login": "chenxiaoyi",
    "avatar_url": "https://secure.gravatar.com/avatar/38eb4e6b823b7e406e11de34be7fe61d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png",
    "id": 877966,
    "url": "https://api.github.com/users/chenxiaoyi"
  },
  "files": [
    {
      "changes": 56,
      "status": "modified",
      "sha": "34a6a1a5bea5b3da557a2fc13829b4f6e57b28f8",
      "raw_url": "https://github.com/theplant/GBox/raw/34a6a1a5bea5b3da557a2fc13829b4f6e57b28f8/GBox/GBCollectionManager.m",
      "additions": 19,
      "filename": "GBox/GBCollectionManager.m",
      "deletions": 37,
      "patch": "--- a/GBox/GBCollectionManager.m\n+++ b/GBox/GBCollectionManager.m\n@@ -153,11 +153,6 @@ static GBCollectionManager* sharedInstance = nil;\n     }   \n }\n \n-\n-\n-\n-\n-\n // folder feed fetch callback\n - (void)addByFetchFolderTicket:(GDataServiceTicket *)ticket\n               finishedWithFeed:(GDataFeedDocList *)feed\n@@ -169,7 +164,6 @@ static GBCollectionManager* sharedInstance = nil;\n         GDataServiceGoogleDocs *service = [docListData docsService];\n         GDataServiceTicket *ticket2;\n         \n-        \n         GDataEntryDocBase *foundEntry = [feed entryForIdentifier:[docEntry identifier]];\n         if (foundEntry == nil) {\n             // the doc isn't currently in this folder's feed\n@@ -185,15 +179,11 @@ static GBCollectionManager* sharedInstance = nil;\n             \n         }\n     } else {\n+        NSLog(@\"Fetch of folder feed failed: %@\", error);\n         // failed to fetch feed of folders\n-        [GBUtility displayAlert:@\"Fetch failed\"\n-                         format:@\"Fetch of folder feed failed: %@\", error];\n-        \n     }\n }\n \n-\n-\n // add to folder callback\n - (void)addToFolderTicket:(GDataServiceTicket *)ticket\n         finishedWithEntry:(GDataEntryDocBase *)entry\n@@ -201,16 +191,11 @@ static GBCollectionManager* sharedInstance = nil;\n     if (error == nil) {\n         GDataFeedDocList *feed = [ticket userData];\n         \n-        [GBUtility displayAlert:@\"Added\"\n-                         format:@\"Added document \\\"%@\\\" to feed \\\"%@\\\"\",\n-         [[entry title] stringValue], [[feed title] stringValue]];\n+        NSLog(@\"Added document \\\"%@\\\" to feed \\\"%@\\\"\",\n+              [[entry title] stringValue], [[feed title] stringValue]);\n         \n-        // re-fetch the document list\n-        //[self fetchDocList];\n-        //[self updateUI];\n     } else {\n-        [GBUtility displayAlert:@\"Insert failed\"\n-                         format:@\"Insert to folder feed failed: %@\", error];\n+        NSLog(@\"Insert to folder feed failed: %@\", error);\n     }\n }\n \n@@ -291,8 +276,9 @@ static GBCollectionManager* sharedInstance = nil;\n //Create Folder\n \n \n-- (void)createFolder:(NSString*) folderName {\n+- (void)createFolder:(NSString*) path {\n     \n+    NSString* folderName = [path lastPathComponent];\n     // get all folder entries\n     NSArray *folderEntries = [[docListData  docListFeed] entriesWithCategoryKind:kGDataCategoryFolderDoc];\n     \n@@ -308,12 +294,12 @@ static GBCollectionManager* sharedInstance = nil;\n     while ((folderEntry = [folderEnum nextObject]) != nil) {\n         \n         NSString *title = [[folderEntry title] stringValue];\n-        if([title isEqual:folderName]){\n+        if([title isEqualToString:folderName]){\n             NSLog(@\"Folder already exist. \\\"%@\\\"\", title);\n-            /*\n-            [GBUtility displayAlert:@\"Collection already exist.\"\n-                             format:@\"Folder already exist. \\\"%@\\\"\", title];\n-             */\n+            [[NSNotificationCenter defaultCenter ]postNotificationName:kGBFolderCreateSucceed\n+                                                                object:path\n+                                                              userInfo:[NSDictionary dictionaryWithObject:[folderEntry identifier] forKey:kGBFileAttributeIdentifier]];\n+            \n             return;\n         }\n         \n@@ -324,29 +310,25 @@ static GBCollectionManager* sharedInstance = nil;\n     \n     NSURL *postURL = [[[docListData docListFeed] postLink] URL];\n     \n-    [service fetchEntryByInsertingEntry:docEntry\n+    GDataServiceTicket *ticket;\n+    ticket = [service fetchEntryByInsertingEntry:docEntry\n                              forFeedURL:postURL\n                                delegate:self\n                       didFinishSelector:@selector(createFolderTicket:finishedWithEntry:error:)];\n+    [ticket setUserData:path];\n }\n \n-\n // folder create callback\n - (void)createFolderTicket:(GDataServiceTicket *)ticket\n          finishedWithEntry:(GDataEntryFolderDoc *)entry\n                      error:(NSError *)error {\n     if (error == nil) {\n+        NSString* path = [ticket userData] ;\n         [[NSNotificationCenter defaultCenter ]postNotificationName:kGBFolderCreateSucceed\n-                                                           object:[entry identifier]\n-                                                         userInfo:nil];\n-        /*\n-        [GBUtility displayAlert:@\"Created folder\"\n-                         format:@\"Created folder \\\"%@\\\"\", [[entry title] stringValue]];\n-        */\n-        // re-fetch the document list\n-        //[self fetchDocList];                            //Currently used to refresh the doc list.\n-        //[self updateUI];\n-        \n+                                                           object:path\n+                                                         userInfo:[NSDictionary dictionaryWithObject:[entry identifier] forKey:kGBFileAttributeIdentifier]];\n+        NSLog(@\"Folder creation succeed: %@\",[[entry title]stringValue]);\n+                \n     } else {\n         NSLog(@\"Folder create failed: %@\", error);\n     }",
      "blob_url": "https://github.com/theplant/GBox/blob/34a6a1a5bea5b3da557a2fc13829b4f6e57b28f8/GBox/GBCollectionManager.m"
    },
    {
      "changes": 10,
      "status": "modified",
      "sha": "34a6a1a5bea5b3da557a2fc13829b4f6e57b28f8",
      "raw_url": "https://github.com/theplant/GBox/raw/34a6a1a5bea5b3da557a2fc13829b4f6e57b28f8/GBox/GBDownloadOperation.m",
      "additions": 5,
      "filename": "GBox/GBDownloadOperation.m",
      "deletions": 5,
      "patch": "--- a/GBox/GBDownloadOperation.m\n+++ b/GBox/GBDownloadOperation.m\n@@ -214,14 +214,14 @@ downloadingEntry:(GDataEntryDocBase*)docEntry\n         if([[request error] code ]==8){\n             retryNeeded = NO;\n         }\n-            \n     }\n-    [[NSNotificationCenter defaultCenter] postNotificationName:kGBDownloadFailed  \n-                                                        object:taskID\n-                                                      userInfo:[NSDictionary dictionaryWithObjectsAndKeys:retryNeeded,@\"retryNeeded\", nil]];\n-\n     NSLog(@\"Faild of request\");\n     NSLog(@\"request = %@\",[request error]);\n+    \n+    [[NSNotificationCenter defaultCenter] postNotificationName:kGBDownloadFailed  \n+                                                        object:taskID\n+                                                      userInfo:[NSDictionary dictionaryWithObjectsAndKeys:\n+                                                                [NSNumber numberWithBool: retryNeeded ],@\"retryNeeded\", nil]];\n     [self willChangeValueForKey:@\"isFinished\"];\n     [self willChangeValueForKey:@\"isExecuting\"];\n     finished = YES;",
      "blob_url": "https://github.com/theplant/GBox/blob/34a6a1a5bea5b3da557a2fc13829b4f6e57b28f8/GBox/GBDownloadOperation.m"
    },
    {
      "changes": 11,
      "status": "modified",
      "sha": "34a6a1a5bea5b3da557a2fc13829b4f6e57b28f8",
      "raw_url": "https://github.com/theplant/GBox/raw/34a6a1a5bea5b3da557a2fc13829b4f6e57b28f8/GBox/GBFileSystemInfo.m",
      "additions": 1,
      "filename": "GBox/GBFileSystemInfo.m",
      "deletions": 10,
      "patch": "--- a/GBox/GBFileSystemInfo.m\n+++ b/GBox/GBFileSystemInfo.m\n@@ -91,22 +91,13 @@ static GBFileSystemInfo* instance= nil;\n         if ([isDirectory boolValue]) {\n             [self fetchLocalInfoOfPath:url];\n             [mLocalInfoDic setObject: attributes forKey:[NSString stringWithFormat:@\"%@/\",[GBUtility simplifyLocalPath:[url path]]]];\n-\n-            //[collectionManager createFolder:[url lastPathComponent]];\n             \n-            /*\n-             NSString *localizedName = nil;\n-             [url getResourceValue:&localizedName forKey:NSURLLocalizedNameKey error:NULL];\n-             \n-             \n-             */\n         }else{\n             NSMutableString* md5String = [NSMutableString stringWithString:@\"\"] ;\n             [GBUtility getMD5FromFile:[url path] toString:md5String] ;\n             [attributes setObject:md5String forKey:kGBFileAttributeMD5];\n             \n-            \n-            \n+                        \n             //set md5 to path dic  \n             /*\n             NSString* possibleExistPath = [md5PathsDic objectForKey:md5String];",
      "blob_url": "https://github.com/theplant/GBox/blob/34a6a1a5bea5b3da557a2fc13829b4f6e57b28f8/GBox/GBFileSystemInfo.m"
    },
    {
      "changes": 50,
      "status": "modified",
      "sha": "34a6a1a5bea5b3da557a2fc13829b4f6e57b28f8",
      "raw_url": "https://github.com/theplant/GBox/raw/34a6a1a5bea5b3da557a2fc13829b4f6e57b28f8/GBox/GBTaskHandler.m",
      "additions": 40,
      "filename": "GBox/GBTaskHandler.m",
      "deletions": 10,
      "patch": "--- a/GBox/GBTaskHandler.m\n+++ b/GBox/GBTaskHandler.m\n@@ -113,7 +113,7 @@\n         }\n         [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n         [currentExecutingTasks removeObject:taskID];\n-        \n+        //Fine:impossible for hang here\n         /*\n          if(!isCollection){\n          \n@@ -145,6 +145,7 @@\n             i=i+2;\n             \n         }\n+        //Fine:impossible for hang here\n     }\n \n }\n@@ -285,8 +286,11 @@\n         case kGBLocalNewCollection:{\n             //kGBLocalNewCollection\n             NSString* path = operandA;\n-            NSString* simplifiedPath = [GBUtility simplifyLocalPath:path];\n-            [collectionManager createFolder:simplifiedPath];\n+            [collectionManager createFolder:path];\n+            [dataFacility insertEvent:0\n+                        withEventCode:kGBLocalAddEntryToCollection\n+                             operandA:path\n+                          andOperandB:nil];\n             [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n             [currentExecutingTasks removeObject:taskID];\n \n@@ -321,6 +325,26 @@\n             [currentExecutingTasks removeObject:taskID];\n             \n         }break;\n+            \n+        case kGBLocalAddEntryToCollection:{\n+            NSString* path = operandA;\n+            NSString* parentPath = [[GBUtility simplifyLocalPath:[path stringByDeletingLastPathComponent]] stringByAppendingString:@\"/\"];\n+            NSString* parentIdentifier = [[localInfoDic valueForKey:parentPath] valueForKey:kGBFileAttributeIdentifier];\n+            \n+            NSString* entryIdentifier = [GBUtility identifierforFileAtPath:[GBUtility simplifyLocalPath:path]];\n+            GDataEntryDocBase* entry = [docListData entryForIdentifier:entryIdentifier];\n+            \n+            if(entry==nil||parentIdentifier==nil){\n+                [dataFacility setState:kGBStateWaiting ofTaskID:[taskMO objectID]];\n+                [currentExecutingTasks removeObject:taskID];\n+            }else{\n+                GDataEntryDocBase* parentEntry = [docListData entryForIdentifier:parentIdentifier];\n+                [collectionManager addEntry:entry  toFolder:parentEntry];\n+                [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n+                [currentExecutingTasks removeObject:taskID];\n+            }\n+            \n+        }break;\n \n         default:\n             NSLog(@\"Unrecognized event code.\");\n@@ -333,7 +357,13 @@\n }\n \n -(void)folderCreated:(NSNotification*)aNotification{\n-    \n+    NSString* path = [aNotification object];\n+    NSString* identifier = [[aNotification userInfo] valueForKey:kGBFileAttributeIdentifier];\n+    [GBUtility setIdentifier:identifier forFileAtPath:[GBUtility simplifyLocalPath:path]];\n+    [dataFacility insertEvent:0\n+                withEventCode:kGBLocalAddEntryToCollection\n+                     operandA:path\n+                  andOperandB:nil];\n }\n \n -(void)uploadFinished:(NSNotification*)aNotification{\n@@ -351,12 +381,12 @@\n     NSString* rootPath = [GBUtility rootPath];\n     if(eventCode == kGBLocalNewFile){\n         if([[path stringByDeletingLastPathComponent] length]!= [rootPath length]){\n-            NSString* parentPath = [GBUtility simplifyLocalPath:[path stringByDeletingLastPathComponent]];\n-            NSString* parentIdentifier = [[localInfoDic valueForKey:parentPath] valueForKey:kGBFileAttributeIdentifier];\n-            if(parentIdentifier!=nil){\n-                GDataEntryDocBase* parentEntry = [docListData entryForIdentifier:parentIdentifier];\n-                [collectionManager addEntry:uploadedEntry  toFolder:parentIdentifier];\n-            }\n+            \n+                [dataFacility insertEvent:0\n+                            withEventCode:kGBLocalAddEntryToCollection\n+                                 operandA:path \n+                              andOperandB:nil];\n+            \n         }\n         [GBUtility setIdentifier:identifier forFileAtPath:[GBUtility simplifyLocalPath: path]];\n         ",
      "blob_url": "https://github.com/theplant/GBox/blob/34a6a1a5bea5b3da557a2fc13829b4f6e57b28f8/GBox/GBTaskHandler.m"
    }
  ],
  "stats": {
    "additions": 65,
    "deletions": 62,
    "total": 127
  },
  "committer": {
    "login": "chenxiaoyi",
    "avatar_url": "https://secure.gravatar.com/avatar/38eb4e6b823b7e406e11de34be7fe61d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png",
    "id": 877966,
    "url": "https://api.github.com/users/chenxiaoyi"
  },
  "url": "https://api.github.com/repos/theplant/GBox/commits/34a6a1a5bea5b3da557a2fc13829b4f6e57b28f8"
}
