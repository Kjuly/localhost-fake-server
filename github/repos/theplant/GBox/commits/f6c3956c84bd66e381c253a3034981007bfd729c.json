{
  "author": {
    "avatar_url": "https://secure.gravatar.com/avatar/38eb4e6b823b7e406e11de34be7fe61d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png",
    "id": 877966,
    "url": "https://api.github.com/users/chenxiaoyi",
    "login": "chenxiaoyi"
  },
  "files": [
    {
      "patch": "--- a/GBox/GBCollectionManager.m\n+++ b/GBox/GBCollectionManager.m\n@@ -216,9 +216,9 @@ static GBCollectionManager* sharedInstance = nil;\n                          didFinishSelector:@selector(removeByFetchFolderTicket:finishedWithFeed:error:)];\n         \n         // save the selected doc in the ticket's userData\n-        //GDataEntryDocBase *doc = [self selectedDoc];\n         [ticket setUserData:docEntry];\n     }   \n+     \n }\n \n \n@@ -226,51 +226,41 @@ static GBCollectionManager* sharedInstance = nil;\n - (void)removeByFetchFolderTicket:(GDataServiceTicket *)ticket\n                  finishedWithFeed:(GDataFeedDocList *)feed\n                             error:(NSError *)error {\n-    \n+    GDataEntryDocBase *docEntry = [ticket userData];\n+\n     if (error == nil) {\n-        GDataEntryDocBase *docEntry = [ticket userData];\n         \n         GDataServiceGoogleDocs *service = [docListData docsService];\n         GDataServiceTicket *ticket2;\n         \n-        // if the entry is not in the folder's feed, insert it; otherwise, delete\n-        // it from the folder's feed\n         GDataEntryDocBase *foundEntry = [feed entryForIdentifier:[docEntry identifier]];\n         if(foundEntry!=nil){\n             // the doc is alrady in the folder's feed, so remove it\n             ticket2 = [service deleteEntry:foundEntry\n-                                  delegate:self\n-                         didFinishSelector:@selector(removeFromFolderTicket:finishedWithEntry:error:)];\n-            [ticket2 setUserData:feed];\n+                                   completionHandler:^(GDataServiceTicket *ticket, id nilObject, NSError *error) {\n+                                       // callback\n+                                       if (error == nil) {\n+                                           NSLog(@\"Removed document from feed \\\"%@\\\"\", [[feed title] stringValue]);\n+                                           \n+                                       } else {\n+                                           NSLog(@\"Remove from folder feed failed: %@\",error);\n+                                           [[NSNotificationCenter defaultCenter] \n+                                                postNotificationName:kGBRemoveEntryFromCollectionFailed\n+                                                              object:nil \n+                                                            userInfo:\n+                                           [NSDictionary dictionaryWithObjectsAndKeys:[docEntry identifier],@\"DocEntryIdentifier\",[feed identifier],@\"ParentIdentifier\", nil]];\n+                                       }\n+                                   }];\n         }\n     } else {\n         // failed to fetch feed of folders\n-        [GBUtility displayAlert:@\"Fetch failed\"\n-                         format:@\"Fetch of folder feed failed: %@\", error];\n-        \n-    }\n-}\n-\n-// remove from folder callback\n-- (void)removeFromFolderTicket:(GDataServiceTicket *)ticket\n-             finishedWithEntry:(GDataEntryDocBase *)entry\n-                         error:(NSError *)error {\n-    if (error == nil) {\n-        GDataFeedDocList *feed = [ticket userData];\n-        \n-        [GBUtility displayAlert:@\"Removed\"\n-                         format:@\"Removed document from feed \\\"%@\\\"\", [[feed title] stringValue]];\n-        \n-        // re-fetch the document list\n-        // [self fetchDocList];\n-        // [self updateUI];\n-    } else {\n-        [GBUtility displayAlert:@\"Fetch failed\"\n-                         format:@\"Remove from folder feed failed: %@\", error];\n+        [[NSNotificationCenter defaultCenter] \n+         postNotificationName:kGBRemoveEntryFromCollectionFailed\n+         object:nil \n+         userInfo:\n+         [NSDictionary dictionaryWithObjectsAndKeys:[docEntry identifier],@\"DocEntryIdentifier\",[feed identifier],@\"ParentIdentifier\", nil]];        \n     }\n-    \n }\n-\n //Create Folder By Path\n \n //Create Folder",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBCollectionManager.m",
      "additions": 22,
      "deletions": 32,
      "changes": 54,
      "filename": "GBox/GBCollectionManager.m",
      "blob_url": "https://github.com/theplant/GBox/blob/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBCollectionManager.m",
      "sha": "f6c3956c84bd66e381c253a3034981007bfd729c"
    },
    {
      "patch": "--- a/GBox/GBDataFacility.m\n+++ b/GBox/GBDataFacility.m\n@@ -6,7 +6,6 @@\n \n #import \"GBCollectionEntity.h\"\n #import \"GBDocEntryEntity.h\"\n-#import \"GBFileSystemInfo.h\"\n \n @interface GBDataFacility()\n \n@@ -1032,13 +1031,6 @@ static GBDataFacility* instance =nil;\n     \n }\n \n--(void)organizeLocalEvents{\n-    \n-}\n-\n--(void)organizeServerEvents{\n-    \n-}\n \n \n @end",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBDataFacility.m",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "filename": "GBox/GBDataFacility.m",
      "blob_url": "https://github.com/theplant/GBox/blob/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBDataFacility.m",
      "sha": "f6c3956c84bd66e381c253a3034981007bfd729c"
    },
    {
      "patch": "--- a/GBox/GBFileSystemInfo.m\n+++ b/GBox/GBFileSystemInfo.m\n@@ -71,7 +71,7 @@ static GBFileSystemInfo* instance= nil;\n         [attributes setObject:isDirectory forKey:NSURLIsDirectoryKey];\n         \n         //set identifier to path dic\n-        NSString* identifier = [GBUtility identifierforFileAtPath:[GBUtility simplifyLocalPath:[url path]]];\n+        NSString* identifier = [GBUtility identifierforFileAtPath:[url path]];\n         /*\n         if(identifier!=nil){\n             NSLog(@\"The identifier length is %lu\",[identifier length]);\n@@ -81,22 +81,23 @@ static GBFileSystemInfo* instance= nil;\n             [attributes setObject:identifier forKey:kGBFileAttributeIdentifier];\n             NSMutableSet* paths =  [identifierPathsDic valueForKey:identifier];\n             if(paths==nil){\n-                [identifierPathsDic setObject:[NSMutableSet setWithObject:[GBUtility simplifyLocalPath:[url path]] ] forKey:identifier];\n+                [identifierPathsDic setObject:[NSMutableSet setWithObject:[url path] ] forKey:identifier];\n             }else{\n-                [paths addObject:[GBUtility simplifyLocalPath:[url path]]];\n+                [paths addObject:[url path]];\n                 [identifierPathsDic setObject:paths forKey:identifier];\n             }\n         }        \n         \n         if ([isDirectory boolValue]) {\n             [self fetchLocalInfoOfPath:url];\n-            [mLocalInfoDic setObject: attributes forKey:[NSString stringWithFormat:@\"%@/\",[GBUtility simplifyLocalPath:[url path]]]];\n+            [mLocalInfoDic setObject: attributes forKey:[NSString stringWithFormat:@\"%@/\",[url path]]];\n             \n         }else{\n+            /*\n             NSMutableString* md5String = [NSMutableString stringWithString:@\"\"] ;\n             [GBUtility getMD5FromFile:[url path] toString:md5String] ;\n             [attributes setObject:md5String forKey:kGBFileAttributeMD5];\n-            \n+            */\n                         \n             //set md5 to path dic  \n             /*\n@@ -114,15 +115,15 @@ static GBFileSystemInfo* instance= nil;\n             if( (md5String!=nil) && (![md5String isEqualToString:@\"\"]) ){\n                 NSMutableSet* paths = [md5PathsDic valueForKey:md5String];\n                 if(paths==nil){\n-                    [md5PathsDic setObject:[NSMutableSet setWithObject:[GBUtility simplifyLocalPath:[url path]] ] forKey:md5String];\n+                    [md5PathsDic setObject:[NSMutableSet setWithObject:[url path] ] forKey:md5String];\n                 }else{\n-                    [paths addObject:[GBUtility simplifyLocalPath:[url path]]];\n+                    [paths addObject:[url path]];\n                     [md5PathsDic setObject:paths forKey:md5String];\n                 }\n             }\n */\n             \n-            [mLocalInfoDic setObject: attributes forKey:[GBUtility simplifyLocalPath:[url path]]];\n+            [mLocalInfoDic setObject: attributes forKey:[url path]];\n    \n         }\n     }",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBFileSystemInfo.m",
      "additions": 9,
      "deletions": 8,
      "changes": 17,
      "filename": "GBox/GBFileSystemInfo.m",
      "blob_url": "https://github.com/theplant/GBox/blob/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBFileSystemInfo.m",
      "sha": "f6c3956c84bd66e381c253a3034981007bfd729c"
    },
    {
      "patch": "--- a/GBox/GBSyncController.m\n+++ b/GBox/GBSyncController.m\n@@ -45,10 +45,7 @@\n         dataFacility = [GBDataFacility sharedDataFacility];\n         \n         taskHandler = [[GBTaskHandler alloc]init];\n-        \n-        //all running operation is in the queue;\n-        operationList = [[NSArray alloc] init];\n-        \n+                \n         setupFinished = YES;\n         \n         collectionManager = [[GBCollectionManager alloc]init];\n@@ -236,14 +233,6 @@ static GBSyncController * shareSyncController = nil;\n         }\n         \n         if(anyChangesNew){\n-            /*\n-            //Because server change fetch use local file system info, thus this fetch is needed.\n-            GBFileSystemInfo* fileSystemInfo = [GBFileSystemInfo sharedFileSystemInfo];\n-            [fileSystemInfo setLocalInfoDic];   \n-            NSDictionary *md5Paths = [fileSystemInfo md5PathsDic];\n-            NSDictionary *identifierPaths = [fileSystemInfo identifierPathsDic];\n-            NSDictionary *fileSysInfo = [fileSystemInfo localInfoDic];\n-            */\n             //largestChangestamp will not be updated, until the changeEntries is fetched successfully.\n             NSNumber *largestChangestamp = [userInfo objectForKey:kGBLargestChangestamp] ;\n             NSLog(@\"Largest changestamp: %@\",largestChangestamp);",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBSyncController.m",
      "additions": 1,
      "deletions": 12,
      "changes": 13,
      "filename": "GBox/GBSyncController.m",
      "blob_url": "https://github.com/theplant/GBox/blob/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBSyncController.m",
      "sha": "f6c3956c84bd66e381c253a3034981007bfd729c"
    },
    {
      "patch": "--- a/GBox/GBTaskHandler.h\n+++ b/GBox/GBTaskHandler.h\n@@ -41,7 +41,7 @@ struct PIArray {\n     GBFileSystemInfo* fileSystemInfo;\n     \n     NSMutableArray* currentExecutingTasks;\n-    \n+    NSMutableSet* uploadingPaths; \n     BOOL canceled;\n }\n ",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBTaskHandler.h",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "filename": "GBox/GBTaskHandler.h",
      "blob_url": "https://github.com/theplant/GBox/blob/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBTaskHandler.h",
      "sha": "f6c3956c84bd66e381c253a3034981007bfd729c"
    },
    {
      "patch": "--- a/GBox/GBTaskHandler.m\n+++ b/GBox/GBTaskHandler.m\n@@ -47,6 +47,8 @@\n         numInQueue = 0;\n         piList = 0;\n         \n+        uploadingPaths = [[NSMutableSet alloc]init];\n+        \n          NSNotificationCenter *nc = [NSNotificationCenter defaultCenter];\n          [nc addObserver:self\n                 selector:@selector(downloadFinished:) \n@@ -68,6 +70,11 @@\n                selector:@selector(uploadFailed:) \n                    name:kGBUploadFailed\n                  object:nil];\n+        [nc addObserver:self\n+               selector:@selector(removeEntryFromFolderFailed:)\n+                   name:kGBRemoveEntryFromCollectionFailed\n+                 object:nil];\n+        \n         [opqueue setMaxConcurrentOperationCount:10];\n         //Manage the Concurrent Operation Number limit\n     }\n@@ -102,8 +109,8 @@\n                 NSError * error = nil;\n                 for(NSString* path in pathSet){\n                     NSString * newPath =[NSString stringWithFormat:@\"%@/%@\", [path stringByDeletingLastPathComponent],suggestedFilename];\n-                    [[NSFileManager defaultManager] moveItemAtPath:[GBUtility expandedPath: path]\n-                                                            toPath:[GBUtility expandedPath: newPath]\n+                    [[NSFileManager defaultManager] moveItemAtPath:path\n+                                                            toPath:newPath\n                                                              error:&error];\n                 }\n                 \n@@ -145,7 +152,16 @@\n         }\n         //Fine:impossible for hang here\n     }\n+}\n \n+-(void)removeEntryFromFolderFailed:(NSNotification*) aNotification{\n+    NSDictionary* userInfo = [aNotification userInfo];\n+    NSString* entryIdentifier = [userInfo valueForKey:@\"DocEntryIdentifier\"];\n+    NSString* parentIdentifier = [userInfo valueForKey:@\"ParentIdentifier\"];\n+    [dataFacility insertEvent:0\n+                withEventCode:kGBLocalRemoveEntryFromCollection\n+                     operandA:entryIdentifier\n+                  andOperandB:parentIdentifier];\n }\n \n -(void)handleServerNewCollection:(NSManagedObject*)taskMO{\n@@ -158,7 +174,7 @@\n     \n     NSArray* includingCollections = [collectionManager includingCollectionOfIdentifier:identifier];\n     if(includingCollections!=nil&&[includingCollections count]==0){\n-        [GBUtility createLocalFolderAtPath: entryTitle];\n+        [GBUtility createLocalFolderAtPath: [GBUtility expandedPath:entryTitle]];\n         [GBUtility setIdentifier:identifier forFileAtPath:entryTitle];\n     }else{\n         for(GDataEntryFolderDoc* folder in includingCollections){\n@@ -209,18 +225,45 @@\n             break;\n         }\n         case kGBLocalNewFile: {\n-        \n-            [NSTimer scheduledTimerWithTimeInterval:i\n-                                             target:self\n-                                           selector:@selector(uploadTimerFireMethod:)\n-                                           userInfo:taskMO\n-                                            repeats:NO];\n-            i=i+2;\n+            NSString *path = operandA;\n+            for(NSString* uploadingPath in uploadingPaths){\n+                if([uploadingPath isEqualToString:path]){\n+                    [currentExecutingTasks removeObject:taskID];\n+                    [dataFacility setState:kGBStateCancel ofTaskID:[taskMO objectID]];\n+                    return YES;\n+                }\n+            }\n+            if([[NSFileManager defaultManager] fileExistsAtPath:path]){\n+                //This check insure the local file exist, when uploading the file.\n+                NSString* possibleIdentifier = [GBUtility identifierforFileAtPath:path];\n+                if(possibleIdentifier==nil||[possibleIdentifier length]<80){\n+                    [uploadingPaths addObject:path];\n+                    [NSTimer scheduledTimerWithTimeInterval:i\n+                                                     target:self\n+                                                   selector:@selector(uploadTimerFireMethod:)\n+                                                   userInfo:taskMO\n+                                                    repeats:NO];\n+                    i=i+2;\n+                }else{\n+                    //If the local file is already set an identifier, the file is treated as updated.\n+                    [currentExecutingTasks removeObject:taskID];\n+                    [dataFacility setState:kGBStateCancel ofTaskID:[taskMO objectID]];\n+                    \n+                    [dataFacility insertEvent:0\n+                                withEventCode:kGBLocalFileUpdated\n+                                     operandA:path\n+                                  andOperandB:nil];\n+                }\n+\n+            }else{\n+                [currentExecutingTasks removeObject:taskID];\n+                [dataFacility setState:kGBStateCancel ofTaskID:[taskMO objectID]];\n+            }\n             break;\n         }    \n \n         case kGBLocalFileUpdated: {/*\n-            NSString* path = [GBUtility simplifyLocalPath: operandA];\n+            NSString* path = operandA;\n             NSManagedObject* pathMO = [dataFacility fetchLocalPathEntryByPathString:path];\n             BOOL isFile = [[pathMO valueForKey:@\"isFile\"]boolValue];\n             NSManagedObject* entryMO;\n@@ -246,8 +289,6 @@\n             i=i+2;\n       */\n             [currentExecutingTasks removeObject:taskID];\n-\n-            \n             [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n          break;\n         }\n@@ -287,7 +328,7 @@\n             }else{\n                 if([[path stringByDeletingLastPathComponent] length]!= [[GBUtility rootPath] length]){\n                     //The file not exist at root path\n-                    NSString* parentPath = [[GBUtility simplifyLocalPath:[path stringByDeletingLastPathComponent]] stringByAppendingString:@\"/\"];\n+                    NSString* parentPath = [[path stringByDeletingLastPathComponent] stringByAppendingString:@\"/\"];\n                     NSString* parentIdentifier = [GBUtility identifierforFileAtPath:parentPath];\n                     if(parentIdentifier!=nil){\n                         NSSet* includedEntries = [collectionManager includedEntryOfCollectionIdentifier:parentIdentifier];\n@@ -302,7 +343,7 @@\n                     //The file exist at root path.\n                     for(GDataEntryDocBase* entry in [[docListData docListFeed]entries]){\n                         if([[[entry title]stringValue] isEqualToString:fileName]){\n-                            if([entry parentLinks]==nil||[entry count]==0){\n+                            if([entry parentLinks]==nil||[[entry parentLinks] count]==0){\n                                 identifierToDelete = [entry identifier];\n                                 break;\n                             }\n@@ -311,7 +352,7 @@\n                 }\n             }\n             if(identifierToDelete==nil){\n-                [dataFacility setState:kGBStateWaiting ofTaskID:[taskMO objectID]];\n+                [dataFacility setState:kGBStateCancel ofTaskID:[taskMO objectID]];\n                 [currentExecutingTasks removeObject:taskID];\n             }else{\n                 [docListData deleteEntryByIdentifier:identifierToDelete];\n@@ -324,28 +365,61 @@\n         case kGBLocalNewCollection:{\n             //kGBLocalNewCollection\n             NSString* path = operandA;\n-            NSString* possibleIdentifier = [GBUtility identifierforFileAtPath:[GBUtility simplifyLocalPath:path]];\n-            if(possibleIdentifier==nil||[possibleIdentifier length]<80){\n-                [collectionManager createFolder:path];\n+            if([[NSFileManager defaultManager] fileExistsAtPath:path]){\n+                \n+                for(NSString* uploadingPath in uploadingPaths){\n+                    if([uploadingPath isEqualToString:path]){\n+                        [currentExecutingTasks removeObject:taskID];\n+                        [dataFacility setState:kGBStateCancel ofTaskID:[taskMO objectID]];\n+                        return YES;\n+                    }\n+                }\n+                NSString* possibleIdentifier = [GBUtility identifierforFileAtPath:path];\n+                if(possibleIdentifier==nil||[possibleIdentifier length]<80){\n+                    \n+                    [uploadingPaths addObject:path];\n+                    [collectionManager createFolder:path];\n+                }\n+                [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n+                [currentExecutingTasks removeObject:taskID];\n+            }else{\n+                [dataFacility setState:kGBStateCancel ofTaskID:[taskMO objectID]];\n+                [currentExecutingTasks removeObject:taskID];\n             }\n-            [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n-            [currentExecutingTasks removeObject:taskID];\n-\n         }\n             break;\n \n         case kGBLocalRename:{\n             //kGBLocalRename\n-            NSString *path = [GBUtility simplifyLocalPath: operandA];\n             NSString* newPath = [taskMO valueForKey:@\"operandB\"];\n             NSString *newName = [newPath lastPathComponent];\n-            NSString* identifier = [[localInfoDic valueForKey:path] valueForKey:kGBFileAttributeIdentifier];\n-            GDataEntryDocBase *entry = [docListData entryForIdentifier:identifier];\n-                        \n-            [docListData renameEntry:entry to:newName];\n+            NSString* identifier = [GBUtility identifierforFileAtPath:newPath];;\n+            if(identifier!=nil&&[identifier length]>80){\n+                GDataEntryDocBase *entry = [docListData entryForIdentifier:identifier];\n+                \n+                [docListData renameEntry:entry to:newName];\n+                \n+                [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n+                [currentExecutingTasks removeObject:taskID];\n+            }else{\n+                [dataFacility setState:kGBStateCancel ofTaskID:[taskMO objectID]];\n+                [currentExecutingTasks removeObject:taskID];\n+                BOOL isDirectory = NO;\n+                if([[NSFileManager defaultManager] fileExistsAtPath:newPath isDirectory:&isDirectory]){\n+                    if(isDirectory){\n+                        [dataFacility insertEvent:0\n+                                    withEventCode:kGBLocalNewCollection\n+                                         operandA:newPath\n+                                      andOperandB:nil];\n+                    }else{\n+                        [dataFacility insertEvent:0\n+                                    withEventCode:kGBLocalNewFile\n+                                         operandA:newPath\n+                                      andOperandB:nil];\n+                    }\n+                }\n+            }\n             \n-            [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n-            [currentExecutingTasks removeObject:taskID];\n \n \n         }\n@@ -354,17 +428,20 @@\n             \n             NSString* oldPath = operandA;\n             NSString* newPath = [taskMO valueForKey:@\"operandB\"];\n-            NSString* identifier = [GBUtility identifierforFileAtPath:[GBUtility simplifyLocalPath:newPath]];\n-            GDataEntryDocBase* docEntry = [docListData entryForIdentifier:identifier];\n             \n             if([[oldPath stringByDeletingLastPathComponent] length]!= [[GBUtility rootPath] length]){\n-                /*\n+                \n+                NSString* parentPath = [[oldPath stringByDeletingLastPathComponent] stringByAppendingString:@\"/\"];\n+                \n+                NSString* parentIdentifier = [GBUtility identifierforFileAtPath:parentPath];\n+                \n+                NSString* entryIdentifier = [GBUtility identifierforFileAtPath:newPath];\n+                \n                 [dataFacility insertEvent:0\n                             withEventCode:kGBLocalRemoveEntryFromCollection\n-                                 operandA:newPath\n-                              andOperandB:nil];\n-                 */\n-                //[collectionManager removeEntry:<#(GDataEntryDocBase *)#> fromFolder:<#(GDataEntryFolderDoc *)#>\n+                                 operandA:entryIdentifier\n+                              andOperandB:parentIdentifier];\n+                 \n             }\n             \n             if([[newPath stringByDeletingLastPathComponent] length]!= [[GBUtility rootPath] length]){\n@@ -372,11 +449,8 @@\n                             withEventCode:kGBLocalAddEntryToCollection\n                                  operandA:newPath\n                               andOperandB:nil];\n-                \n             }\n \n-            \n-\n             [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n             [currentExecutingTasks removeObject:taskID];\n \n@@ -388,26 +462,40 @@\n             \n         }break;\n             \n+        case kGBLocalRemoveEntryFromCollection:{\n+            NSString* parentIdentifier = [taskMO valueForKey:@\"operandB\"];\n+            NSString* entryIdentifier = operandA;\n+            GDataEntryDocBase* entry = [docListData entryForIdentifier:entryIdentifier];\n+            \n+            if(entry==nil||parentIdentifier==nil){\n+                [dataFacility setState:kGBStateWaiting ofTaskID:[taskMO objectID]];\n+                [currentExecutingTasks removeObject:taskID];\n+            }else{\n+                GDataEntryDocBase* parentEntry = [docListData entryForIdentifier:parentIdentifier];\n+                [collectionManager removeEntry:entry fromFolder:parentEntry];\n+                [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n+                [currentExecutingTasks removeObject:taskID];\n+            }\n+        }break;\n+            \n         case kGBLocalAddEntryToCollection:{\n             NSString* path = operandA;\n-            NSString* parentPath = [[GBUtility simplifyLocalPath:[path stringByDeletingLastPathComponent]] stringByAppendingString:@\"/\"];\n+            NSString* parentPath = [[path stringByDeletingLastPathComponent] stringByAppendingString:@\"/\"];\n             \n             NSString* parentIdentifier = [GBUtility identifierforFileAtPath:parentPath];\n             \n-            NSString* entryIdentifier = [GBUtility identifierforFileAtPath:[GBUtility simplifyLocalPath:path]];\n+            NSString* entryIdentifier = [GBUtility identifierforFileAtPath:path];\n             GDataEntryDocBase* entry = [docListData entryForIdentifier:entryIdentifier];\n-            \n             if(entry==nil||parentIdentifier==nil){\n                 [dataFacility setState:kGBStateWaiting ofTaskID:[taskMO objectID]];\n                 [currentExecutingTasks removeObject:taskID];\n             }else{\n                 GDataEntryDocBase* parentEntry = [docListData entryForIdentifier:parentIdentifier];\n-                [collectionManager addEntry:entry  toFolder:parentEntry];\n+                [collectionManager addEntry:entry  \n+                                   toFolder:parentEntry];\n                 [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n                 [currentExecutingTasks removeObject:taskID];\n             }\n-            [dataFacility setState:kGBStateDone ofTaskID:[taskMO objectID]];\n-            [currentExecutingTasks removeObject:taskID];\n \n         }break;\n \n@@ -425,7 +513,7 @@\n -(void)folderCreated:(NSNotification*)aNotification{\n     NSString* path = [aNotification object];\n     NSString* identifier = [[aNotification userInfo] valueForKey:kGBFileAttributeIdentifier];\n-    [GBUtility setIdentifier:identifier forFileAtPath:[GBUtility simplifyLocalPath:path]];\n+    [GBUtility setIdentifier:identifier forFileAtPath:path];\n     if([[path stringByDeletingLastPathComponent] length]!= [[GBUtility rootPath] length]){\n \n         [dataFacility insertEvent:0\n@@ -446,9 +534,11 @@\n     \n     NSString* identifier = [userInfo valueForKey:@\"kGBEntryIdentifier\"];\n     \n-    GDataEntryDocBase* uploadedEntry = [docListData entryForIdentifier:identifier];\n     NSString* rootPath = [GBUtility rootPath];\n+    \n     if(eventCode == kGBLocalNewFile){\n+        [uploadingPaths removeObject:path];\n+        \n         if([[path stringByDeletingLastPathComponent] length]!= [rootPath length]){\n             \n                 [dataFacility insertEvent:0\n@@ -457,11 +547,11 @@\n                               andOperandB:nil];\n             \n         }\n-        [GBUtility setIdentifier:identifier forFileAtPath:[GBUtility simplifyLocalPath: path]];\n+        [GBUtility setIdentifier:identifier forFileAtPath:path];\n         \n     }else if(eventCode == kGBLocalFileUpdated){\n         /*\n-        NSManagedObject* pathMO = [dataFacility fetchLocalPathEntryByPathString:[GBUtility simplifyLocalPath: path]];\n+        NSManagedObject* pathMO = [dataFacility fetchLocalPathEntryByPathString: path];\n         BOOL isFile = [[pathMO valueForKey:@\"isFile\"]boolValue];\n         NSManagedObject* entryMO;\n         if(isFile){\n@@ -480,7 +570,7 @@\n         NSSet *localPaths = [entryMO valueForKey:@\"localPaths\"];\n         for(NSManagedObject* pathMO in localPaths){\n             NSString* cPath = [pathMO valueForKey:@\"stringValue\"];\n-            [GBUtility setIdentifier:identifier forFileAtPath:[GBUtility simplifyLocalPath: cPath]];\n+            [GBUtility setIdentifier:identifier forFileAtPath: cPath];\n         }\n          */\n     }\n@@ -534,7 +624,7 @@\n     NSString* identifier = [taskMO valueForKey:@\"operandA\"];\n     GDataEntryDocBase* entry = [docListData entryForIdentifier:identifier];\n         \n-    NSString* pathAtRoot =[[entry title]stringValue];\n+    NSString* pathAtRoot =[GBUtility expandedPath:[[entry title]stringValue]];\n     \n     [GBUtility setIdentifier:identifier forFileAtPath:pathAtRoot];\n     \n@@ -542,16 +632,21 @@\n     if(includingCollections!=nil&&[includingCollections count]!=0){\n         for(GDataEntryFolderDoc* folder in includingCollections){\n             NSString* folderIdentifier = [folder identifier];\n-            NSSet* parentPathSet = [localIdentifierDic valueForKey:folderIdentifier];\n-            for(NSString* parentPath in parentPathSet){\n-                //The local directory is not exist\n-                NSString* newPath = [NSString stringWithFormat:@\"%@/%@\",parentPath,pathAtRoot];\n-                //[GBUtility createLocalFolderAtPath:[[moPath valueForKey:@\"stringValue\"] stringByDeletingLastPathComponent]];\n-                \n-                [GBUtility cpFileAt:pathAtRoot\n-                                 to:newPath];                    \n+            NSMutableSet* parentPathSet = [localIdentifierDic valueForKey:folderIdentifier];\n+            if(parentPathSet==nil||[parentPathSet count] == 0){\n+                [dataFacility insertEvent:0\n+                            withEventCode:kGBServerNewCollection\n+                                 operandA:folderIdentifier\n+                              andOperandB:nil];\n+            }\n                 \n-                //If the local directory is exist, then nothing have to be done.\n+            for(NSString* parentPath in parentPathSet){\n+                    //The local directory is not exist\n+                NSString* newPath = [NSString stringWithFormat:@\"%@/%@\",parentPath,[[entry title]stringValue]];\n+                    [GBUtility createLocalFolderAtPath:parentPath];\n+                    [GBUtility cpFileAt:pathAtRoot\n+                                     to:newPath];                    \n+                    //If the local directory is exist, then nothing have to be done.\n             }\n         }\n         [GBUtility removeFileAt:pathAtRoot];\n@@ -583,7 +678,6 @@\n     }\n }\n \n-\n -(void)uploadTimerFireMethod:(NSTimer *) theTimer{\n     if (!canceled) {\n \n@@ -649,7 +743,6 @@\n     isAllOperationPaused = YES;\n     //tasksCount=30;\n     \n-    \n     //stop all asihttprequest\n     for (numin = 0; numin < numInQueue; numin++) {\n         [[[[opqueue operations] objectAtIndex:numin] getRequest] cancel];",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBTaskHandler.m",
      "additions": 155,
      "deletions": 62,
      "changes": 217,
      "filename": "GBox/GBTaskHandler.m",
      "blob_url": "https://github.com/theplant/GBox/blob/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBTaskHandler.m",
      "sha": "f6c3956c84bd66e381c253a3034981007bfd729c"
    },
    {
      "patch": "--- a/GBox/GBUtility.h\n+++ b/GBox/GBUtility.h\n@@ -31,19 +31,18 @@\n \n + (void) getMD5FromFile:(NSString *) pathToFile toString:(NSMutableString*)md5String ;\n \n-\n +(NSString *)createLocalFolder:(NSString*)folderTitle at:(NSString*) path;\n \n +(BOOL)createLocalFolderAtPath:(NSString*)path;\n \n-+(NSString*) simplifyLocalPath:(NSString*)path;\n-\n +(BOOL)cpFileAt:(NSString*)src to: (NSString*)dest;\n \n +(BOOL)removeFileAt:(NSString*)path;\n \n +(NSString*) expandedPath:(NSString*)originalPath;\n \n++(NSString*) simplifyLocalPath:(NSString*)path;\n+\n +(BOOL) isPathAtRoot:(NSString*)existPath;\n \n +(NSInteger)setIdentifier:(NSString*) resourceID",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBUtility.h",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "filename": "GBox/GBUtility.h",
      "blob_url": "https://github.com/theplant/GBox/blob/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBUtility.h",
      "sha": "f6c3956c84bd66e381c253a3034981007bfd729c"
    },
    {
      "patch": "--- a/GBox/GBUtility.m\n+++ b/GBox/GBUtility.m\n@@ -159,8 +159,8 @@ static NSUInteger sharedBandWidth = 0;\n \n +(BOOL)cpFileAt:(NSString*)src to: (NSString*)dest{\n     NSError* error = nil;\n-    [[NSFileManager defaultManager] copyItemAtPath:[GBUtility expandedPath: src] \n-                                            toPath:[GBUtility expandedPath:dest] \n+    [[NSFileManager defaultManager] copyItemAtPath:src\n+                                            toPath:dest\n                                              error:&error];\n     if(error!=nil){\n         NSLog(@\"Error in cpFileAt %@ to %@ with error:%@\",src,dest,[error localizedDescription] );\n@@ -172,7 +172,7 @@ static NSUInteger sharedBandWidth = 0;\n +(BOOL)createLocalFolderAtPath:(NSString*)path{\n     NSError *folderCreationError = nil;\n     \n-    if([[NSFileManager defaultManager] createDirectoryAtPath:[self expandedPath:path]\n+    if([[NSFileManager defaultManager] createDirectoryAtPath:path\n                                  withIntermediateDirectories:YES \n                                                   attributes:nil \n                                                        error:&folderCreationError ]){\n@@ -197,7 +197,7 @@ static NSUInteger sharedBandWidth = 0;\n +(BOOL)removeFileAt:(NSString*)path{\n     NSError *removeError = nil;\n     \n-    if([[NSFileManager defaultManager] removeItemAtPath:[GBUtility expandedPath: path] error:&removeError ]){\n+    if([[NSFileManager defaultManager] removeItemAtPath:path error:&removeError ]){\n         //NSLog(@\"\");\n         return YES;\n     }else{\n@@ -226,7 +226,7 @@ static NSUInteger sharedBandWidth = 0;\n     //Turn the foundation string to cstring\n \tEAname = [attrName_identifier_string UTF8String];\n \tEAvalue = [resourceID UTF8String];\n-    path_char = [[GBUtility expandedPath: path] UTF8String];\n+    path_char = [path UTF8String];\n     \n     NSInteger result = setxattr(path_char, EAname, EAvalue, strlen(EAvalue)+1,0, 0); // This is the function in xattr.h\n     if (0 !=  result) {\n@@ -241,7 +241,7 @@ static NSUInteger sharedBandWidth = 0;\n     char textEncoding[256];\n     ssize_t attrSize;\n \n-    attrSize = getxattr([[GBUtility expandedPath:path_string] fileSystemRepresentation], [attrName_identifier_string UTF8String], textEncoding, sizeof(textEncoding), 0, 0);\n+    attrSize = getxattr([path_string fileSystemRepresentation], [attrName_identifier_string UTF8String], textEncoding, sizeof(textEncoding), 0, 0);\n     if (attrSize)\n         //NSLog(@\"textEncoding: %s\\n\", textEncoding);\n         return [NSString stringWithUTF8String:textEncoding];\n@@ -310,8 +310,7 @@ static NSUInteger sharedBandWidth = 0;\n     return ald;\n }\n \n-+(BOOL)recycleFileAtPath:(NSString*)originalPath{\n-    NSString* path = [GBUtility expandedPath:originalPath];\n++(BOOL)recycleFileAtPath:(NSString*)path{\n     NSWorkspace *ws =[NSWorkspace sharedWorkspace];\n     if(![[NSFileManager defaultManager]fileExistsAtPath:path]){\n         return YES;",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBUtility.m",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "filename": "GBox/GBUtility.m",
      "blob_url": "https://github.com/theplant/GBox/blob/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBUtility.m",
      "sha": "f6c3956c84bd66e381c253a3034981007bfd729c"
    },
    {
      "patch": "--- a/GBox/GBoxAppDelegate.m\n+++ b/GBox/GBoxAppDelegate.m\n@@ -287,21 +287,40 @@\n     fileSystemInfo = [GBFileSystemInfo sharedFileSystemInfo];\n     [fileSystemInfo setLocalInfoDic];\n     localInfoDic = [fileSystemInfo localInfoDic];\n-\n     /*\n     //find new crash report\n     GBCrashReport *GBC = [[GBCrashReport alloc] init];\n     [GBC newCrashReportExists];\n      */\n     //[self redirectNSLogToDocumentFolder];\n-    /*\n-    NSTimer *timer = [NSTimer scheduledTimerWithTimeInterval:10\n-                                                      target:self\n-                                                    selector:@selector(fetchLocalFileSystemInfo:)\n-                                                    userInfo:nil\n-                                                    repeats:YES];\n-     */\n+    \n+     \n } \n+\n+\n+\n+-(void)eventsPreprocess{\n+    GBDataFacility* dataFacility = [GBDataFacility sharedDataFacility];\n+    NSArray* waitingTasks = [dataFacility fetchTaskOfState:kGBStateWaiting];\n+    \n+    NSMutableDictionary* operandToMO = [[NSMutableDictionary alloc]init];\n+    NSArray* operandsArray = [operandToMO allKeys];\n+    NSArray* MOsArray = [operandToMO allValues];\n+    for(NSManagedObject* mo in waitingTasks){\n+        NSUInteger eventCode = [[mo valueForKey:@\"eventCode\"]integerValue];\n+        NSString* operandA = [mo valueForKey:@\"operandA\"];\n+        NSString* operandB = [mo valueForKey:@\"operandB\"];\n+        if(eventCode == kGBLocalNewFile || eventCode ==kGBLocalFileUpdated || eventCode ==kGBLocalNewCollection ){\n+            NSManagedObject* possibleExistMO = [operandToMO valueForKey:operandA];\n+            if(possibleExistMO!=nil){\n+                \n+            }\n+        }\n+        \n+    }\n+\n+}\n+\n /*\n -(void)fetchLocalFileSystemInfo:(NSTimer*)timer{\n     fileSystemInfo = [GBFileSystemInfo sharedFileSystemInfo];\n@@ -346,10 +365,9 @@\n     \n     GBDataFacility *dataFacility = [GBDataFacility sharedDataFacility];\n     \n-    NSString* simplifiedPath = [GBUtility simplifyLocalPath:filePath];\n-    NSDictionary* fileInfo = [localInfoDic valueForKey:simplifiedPath];\n+    NSDictionary* fileInfo = [localInfoDic valueForKey:filePath];\n     if(fileInfo==nil||[fileInfo count]==0){\n-        fileInfo = [localInfoDic valueForKey:[simplifiedPath stringByAppendingString:@\"/\"]];\n+        fileInfo = [localInfoDic valueForKey:[filePath stringByAppendingString:@\"/\"]];\n     }\n     \n     NSString* identifier = [fileInfo valueForKey:kGBFileAttributeIdentifier];\n@@ -407,6 +425,7 @@\n     if(![authController isSignedIn]&&setupFinished==YES){\n         [authController tryKeychainAuthenticaiton];\n     }\n+    //This part code is the entrance for the access to google api. Program entrance..\n     //[syncController restartOpeartions];\n }\n ",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBoxAppDelegate.m",
      "additions": 30,
      "deletions": 11,
      "changes": 41,
      "filename": "GBox/GBoxAppDelegate.m",
      "blob_url": "https://github.com/theplant/GBox/blob/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBoxAppDelegate.m",
      "sha": "f6c3956c84bd66e381c253a3034981007bfd729c"
    },
    {
      "patch": "--- a/GBox/GBoxConstants.h\n+++ b/GBox/GBoxConstants.h\n@@ -72,6 +72,9 @@ extern NSString* const kGBDownloadFinished;\n extern NSString* const kGBDownloadFailed;\n extern NSString* const kGBUploadFinished;\n extern NSString* const kGBUploadFailed;\n+\n+extern NSString* const kGBRemoveEntryFromCollectionFailed;\n+\n extern NSString * const kGB_DB_STORE_FILENAME; \n \n ",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBoxConstants.h",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "filename": "GBox/GBoxConstants.h",
      "blob_url": "https://github.com/theplant/GBox/blob/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBoxConstants.h",
      "sha": "f6c3956c84bd66e381c253a3034981007bfd729c"
    },
    {
      "patch": "--- a/GBox/GBoxConstants.m\n+++ b/GBox/GBoxConstants.m\n@@ -53,6 +53,7 @@ NSString * const kGB_DB_STORE_FILENAME = @\"gbdatamodel.xml\";\n \n NSString* const kGBChangeAccount = @\"kGBChangeAccount\";\n \n+NSString* const kGBRemoveEntryFromCollectionFailed =  @\"kGBRemoveEntryFromCollectionFailed\";\n - (id)init\n {\n     self = [super init];",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBoxConstants.m",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "filename": "GBox/GBoxConstants.m",
      "blob_url": "https://github.com/theplant/GBox/blob/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/GBoxConstants.m",
      "sha": "f6c3956c84bd66e381c253a3034981007bfd729c"
    },
    {
      "patch": "--- a/GBox/ShareWindowController.m\n+++ b/GBox/ShareWindowController.m\n@@ -50,10 +50,9 @@\n     //dataFacility = [GBDataFacility sharedDataFacility];\n     aclShareManager = [[GBACLShareManager alloc]init];\n     \n-    NSString* simplifiedPath = [GBUtility simplifyLocalPath:filePath];\n \n-    NSLog(@\"%@\",simplifiedPath);\n-    NSString* identifier = [GBUtility identifierforFileAtPath: simplifiedPath];\n+    NSLog(@\"%@\",filePath);\n+    NSString* identifier = [GBUtility identifierforFileAtPath: filePath];\n     if(identifier !=nil){\n         entry = [[docListData docListFeed] entryForIdentifier:identifier];\n         ",
      "status": "modified",
      "raw_url": "https://github.com/theplant/GBox/raw/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/ShareWindowController.m",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "filename": "GBox/ShareWindowController.m",
      "blob_url": "https://github.com/theplant/GBox/blob/f6c3956c84bd66e381c253a3034981007bfd729c/GBox/ShareWindowController.m",
      "sha": "f6c3956c84bd66e381c253a3034981007bfd729c"
    }
  ],
  "committer": {
    "avatar_url": "https://secure.gravatar.com/avatar/38eb4e6b823b7e406e11de34be7fe61d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png",
    "id": 877966,
    "url": "https://api.github.com/users/chenxiaoyi",
    "login": "chenxiaoyi"
  },
  "stats": {
    "additions": 233,
    "deletions": 148,
    "total": 381
  },
  "parents": [
    {
      "sha": "b4f6b78cf3c435904d71d70463f822423213adf9",
      "url": "https://api.github.com/repos/theplant/GBox/commits/b4f6b78cf3c435904d71d70463f822423213adf9"
    }
  ],
  "commit": {
    "tree": {
      "sha": "4a35f8a57b58a864c7a8e6e0782763ac6ee10818",
      "url": "https://api.github.com/repos/theplant/GBox/git/trees/4a35f8a57b58a864c7a8e6e0782763ac6ee10818"
    },
    "message": "Major updated of local file move, folder creation.",
    "author": {
      "date": "2011-09-04T19:53:20-07:00",
      "name": "Xiaoyi Chen",
      "email": "xiaoyi.chen@hotmail.com"
    },
    "committer": {
      "date": "2011-09-04T19:53:20-07:00",
      "name": "Xiaoyi Chen",
      "email": "xiaoyi.chen@hotmail.com"
    },
    "url": "https://api.github.com/repos/theplant/GBox/git/commits/f6c3956c84bd66e381c253a3034981007bfd729c"
  },
  "sha": "f6c3956c84bd66e381c253a3034981007bfd729c",
  "url": "https://api.github.com/repos/theplant/GBox/commits/f6c3956c84bd66e381c253a3034981007bfd729c"
}
